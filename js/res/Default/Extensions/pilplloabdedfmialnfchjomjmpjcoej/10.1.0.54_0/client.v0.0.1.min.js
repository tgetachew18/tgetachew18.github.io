webpackJsonp([1],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _reactDom = __webpack_require__(28);

	var _LoggerService = __webpack_require__(2);

	var _LoggerService2 = _interopRequireDefault(_LoggerService);

	var _Consts = __webpack_require__(1);

	var _EventsService = __webpack_require__(11);

	var _EventsService2 = _interopRequireDefault(_EventsService);

	var _components = __webpack_require__(29);

	var Components = _interopRequireWildcard(_components);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _ConfigurationService = __webpack_require__(18);

	var _ConfigurationService2 = _interopRequireDefault(_ConfigurationService);

	var _ServiceFactory = __webpack_require__(7);

	var _ServiceFactory2 = _interopRequireDefault(_ServiceFactory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	// Importing all the components that are available in the engine

	/* tslint:enable:no-unused-variable */
	__webpack_require__(85); /* tslint:disable:no-unused-variable */


	var conf = new _ConfigurationService2.default();
	var configuration = void 0;
	var env_ = 'client';
	conf.load().then(function () {
	    configuration = conf.getConfiguration();
	    _LoggerService2.default.debug("Configuration loaded");
	    var extensionComponentKeys = Object.keys(configuration.components);
	    var loadedApp = false;

	    for (var i = 0; !loadedApp && i < extensionComponentKeys.length; i++) {
	        var component = configuration.components[extensionComponentKeys[i]];

	        if (component.type === _Consts.NEW_TAB_TYPE) {
	            for (var j = 0; j < component.components.length; j++) {
	                var componentNewTab = component.components[j];

	                if (componentNewTab.id === "mainWindow") {
	                    var App = _ComponentsFactory2.default.createComponent(componentNewTab.type);

	                    (0, _reactDom.render)(React.createElement(App, { config: componentNewTab }), document.getElementById("root"));
	                } else {
	                    _ServiceFactory2.default.load(componentNewTab, 'client');
	                }
	            }

	            loadedApp = true;
	        } else if (component.type === _Consts.COMMON_COMPONENTS_TYPE) {
	            _ServiceFactory2.default.load(component, 'client');
	        }
	    }

	    if (loadedApp) {
	        _EventsService2.default.trigger(_Consts.CLIENT_LOADED_EVENT);
	        _LoggerService2.default.debug('event: ' + _Consts.CLIENT_LOADED_EVENT);
	        _LoggerService2.default.debug("App bootstrapped");
	    } else {
	        _LoggerService2.default.debug("App failed to load");
	    }
	});

/***/ },
/* 1 */,
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */
/***/ function(module, exports) {

	module.exports = React;

/***/ },
/* 28 */
/***/ function(module, exports) {

	module.exports = ReactDOM;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _Container = __webpack_require__(30);

	var _Container2 = _interopRequireDefault(_Container);

	var _Link = __webpack_require__(69);

	var _Link2 = _interopRequireDefault(_Link);

	var _Text = __webpack_require__(70);

	var _Text2 = _interopRequireDefault(_Text);

	var _Item = __webpack_require__(71);

	var _Item2 = _interopRequireDefault(_Item);

	var _Input = __webpack_require__(73);

	var _Input2 = _interopRequireDefault(_Input);

	var _ItemsContainer = __webpack_require__(74);

	var _ItemsContainer2 = _interopRequireDefault(_ItemsContainer);

	var _SearchEngineSelect = __webpack_require__(75);

	var _SearchEngineSelect2 = _interopRequireDefault(_SearchEngineSelect);

	var _SearchAutoSuggest = __webpack_require__(77);

	var _SearchAutoSuggest2 = _interopRequireDefault(_SearchAutoSuggest);

	var _SupportButton = __webpack_require__(78);

	var _SupportButton2 = _interopRequireDefault(_SupportButton);

	var _IntervalComponents = __webpack_require__(79);

	var _IntervalComponents2 = _interopRequireDefault(_IntervalComponents);

	var _Popup = __webpack_require__(80);

	var _Popup2 = _interopRequireDefault(_Popup);

	var _Clock = __webpack_require__(81);

	var _Clock2 = _interopRequireDefault(_Clock);

	var _Weather = __webpack_require__(82);

	var _Weather2 = _interopRequireDefault(_Weather);

	var _Image = __webpack_require__(83);

	var _Image2 = _interopRequireDefault(_Image);

	var _Menu = __webpack_require__(84);

	var _Menu2 = _interopRequireDefault(_Menu);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _reactAddonsCssTransitionGroup = __webpack_require__(31);

	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _EventsService = __webpack_require__(11);

	var _EventsService2 = _interopRequireDefault(_EventsService);

	var _Actions = __webpack_require__(32);

	var _LoggerService = __webpack_require__(2);

	var _LoggerService2 = _interopRequireDefault(_LoggerService);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    Block = _require.Block;

	var Container = function (_React$Component) {
	    _inherits(Container, _React$Component);

	    function Container(props) {
	        _classCallCheck(this, Container);

	        var _this = _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).call(this, props));

	        _this.state = {
	            hovered: false
	        };

	        _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);
	        _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);
	        _this.handleOnClick = _this.handleOnClick.bind(_this);
	        return _this;
	    }

	    _createClass(Container, [{
	        key: "createComponents",
	        value: function createComponents() {
	            var _this2 = this;

	            var self = this;
	            var childrenComponents = void 0;
	            if (this.props.config.components) {
	                (function () {
	                    var components = _this2.props.config.components;
	                    childrenComponents = Object.keys(_this2.props.config.components).map(function (componentKey) {
	                        var ComponentObject = _ComponentsFactory2.default.createComponent(components[componentKey].type);
	                        return React.createElement(ComponentObject, { key: componentKey, config: components[componentKey], hover: self.state.hovered });
	                    });
	                })();
	            }

	            return childrenComponents;
	        }
	    }, {
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            _Actions.register.bind(this)(this.props.config.behaviours);
	            if (this.props.config.events && this.props.config.events.onMount) {
	                _EventsService2.default.trigger(this.props.config.events.onMount.name, [_assign({}, this.props.config.events.onMount)]);
	                _LoggerService2.default.debug('event: ' + this.props.config.events.onMount.name);
	            }
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            _Actions.unregister.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "handleMouseEnter",
	        value: function handleMouseEnter(event) {
	            this.setState({ hovered: true });
	        }
	    }, {
	        key: "handleMouseLeave",
	        value: function handleMouseLeave(event) {
	            this.setState({ hovered: false });
	        }
	    }, {
	        key: "handleOnClick",
	        value: function handleOnClick(event) {
	            if (this.props.config.events && this.props.config.events.onClick) {
	                var params = _assign({}, this.props.config.events.onClick);
	                event.stopPropagation();
	                _LoggerService2.default.debug("Shot click event " + JSON.stringify(params));
	                _EventsService2.default.trigger(this.props.config.events.onClick.name, [params, _assign({}, this.props.config)]);
	                _LoggerService2.default.debug('event: ' + this.props.config.events.onClick.name);
	            }

	            if (this.props.onClick) {
	                this.props.onClick(event);
	            }
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var children = this.createComponents();
	            var container = React.createElement("div", { style: { display: "none" } });
	            var containerProps = {
	                onMouseEnter: this.handleMouseEnter.bind(this),
	                onMouseLeave: this.handleMouseLeave.bind(this),
	                onClick: this.handleOnClick.bind(this)
	            };

	            if (!this.props.config.hide) {
	                container = React.createElement(
	                    Block,
	                    { style: _assign({}, this.props.config.style ? this.props.config.style : {}, this.state ? this.state.style : {}), props: containerProps },
	                    children
	                );
	            }

	            if (!this.props.config.hide && this.props.config.animateClass) {
	                container = React.createElement(
	                    _reactAddonsCssTransitionGroup2.default,
	                    { transitionName: this.props.config.animateClass,
	                        transitionAppear: true,
	                        transitionAppearTimeout: 0,
	                        transitionEnterTimeout: 0,
	                        transitionLeaveTimeout: 0 },
	                    container
	                );
	            }

	            return container;
	        }
	    }]);

	    return Container;
	}(React.Component);

	exports.default = Container;


	_ComponentsFactory2.default.add(function () {
	    return Container;
	}, 'Container');

/***/ },
/* 31 */
/***/ function(module, exports) {

	module.exports = React.addons.CSSTransitionGroup;

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

	var _assign = __webpack_require__(5);

	exports.actionCreator = actionCreator;
	exports.unregister = unregister;
	exports.register = register;

	var _reactDom = __webpack_require__(28);

	var ReactDOM = _interopRequireWildcard(_reactDom);

	var _fetchJsonp = __webpack_require__(33);

	var _fetchJsonp2 = _interopRequireDefault(_fetchJsonp);

	var _ActionTypes = __webpack_require__(34);

	var ActionTypes = _interopRequireWildcard(_ActionTypes);

	var _LoggerService = __webpack_require__(2);

	var _LoggerService2 = _interopRequireDefault(_LoggerService);

	var _Consts = __webpack_require__(1);

	var _Utils = __webpack_require__(3);

	var _BrowserService = __webpack_require__(14);

	var _BrowserService2 = _interopRequireDefault(_BrowserService);

	var _HttpService = __webpack_require__(19);

	var _HttpService2 = _interopRequireDefault(_HttpService);

	var _EventsService = __webpack_require__(11);

	var _EventsService2 = _interopRequireDefault(_EventsService);

	var _ServiceFactory = __webpack_require__(7);

	var _ServiceFactory2 = _interopRequireDefault(_ServiceFactory);

	var _ChromeService = __webpack_require__(15);

	var _ChromeService2 = _interopRequireDefault(_ChromeService);

	var _Condition = __webpack_require__(25);

	var _Condition2 = _interopRequireDefault(_Condition);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function actionCreator(behaviour) {
	    var retFunc = void 0;
	    var self = this;
	    switch (behaviour.do) {
	        case ActionTypes.GET_SEARCH_SUGGESTIONS:
	            retFunc = function retFunc(args) {
	                var suggestUrl = self.search.getSuggestUrl();
	                var cond = behaviour.c ? new _Condition2.default(behaviour.c) : null;
	                if (args.text === "") {
	                    self.setState({ rows: [] });
	                } else if (suggestUrl && cond && cond.check(args)) {
	                    var locale = _BrowserService2.default.locale2();
	                    var url = (0, _Utils.sprintf)(suggestUrl, { searchTerms: args.text, lang: locale, country: '' });

	                    if ((0, _Utils.strStartsWith)(window.location.href, "http://")) {
	                        (0, _fetchJsonp2.default)(url).then(function (response) {
	                            return response.json();
	                        }).then(function (json) {
	                            if (json[0] === args.text.trim()) {
	                                if (json[1].length > 5) {
	                                    self.setState({ rows: json[1].slice(0, 5), selected: -1 });
	                                } else {
	                                    self.setState({
	                                        rows: json[1],
	                                        selected: -1
	                                    });
	                                }
	                            }
	                        }).catch(function (ex) {
	                            console.log('parsing failed', ex);
	                        });
	                    } else {
	                        _HttpService2.default.doGetJSON(url, undefined, undefined, {}).then(function (json) {
	                            if (json[0] === args.text.trim()) {
	                                if (json[1].length > 5) {
	                                    self.setState({ rows: json[1].slice(0, 5), selected: -1 });
	                                } else {
	                                    self.setState({
	                                        rows: json[1],
	                                        selected: -1
	                                    });
	                                }
	                            }
	                        });
	                    }
	                }
	            };
	            break;
	        case ActionTypes.CHANGE_SELECTED:
	            retFunc = function retFunc(args) {
	                var selected = void 0;

	                if (args.keyCode === _Consts.KEY_DOWN_CODE && self.state.selected > 0) {
	                    selected = --self.state.selected;
	                } else if (args.keyCode === _Consts.KEY_UP_CODE && self.state.selected + 1 < self.state.rows.length) {
	                    selected = ++self.state.selected;
	                }

	                if (this.selected != selected) {
	                    self.setState({
	                        selected: selected
	                    });
	                    _EventsService2.default.trigger(_Consts.AUTO_SUGGEST_SELECTED_CHANGE_EVENT, [{ text: self.state.rows[selected] }]);
	                    _LoggerService2.default.debug('event: ' + _Consts.AUTO_SUGGEST_SELECTED_CHANGE_EVENT);
	                }
	            };
	            break;
	        case ActionTypes.HIDE_WHEN_CLICKED_OUTSIDE:
	            retFunc = function retFunc(args) {
	                if (selfIsMounted(self) && !ReactDOM.findDOMNode(self).contains(args.target)) {
	                    if (self.state && self.state.rows) {
	                        self.setState({ rows: [], selected: -1 });
	                    } else if (self.state && self.state.isOpen) {
	                        self.setState({ isOpen: false });
	                    }
	                }
	            };
	            break;
	        case ActionTypes.SET_SEARCH_ENGINE:
	            retFunc = function retFunc(args) {
	                var pref = _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE);
	                var cond = behaviour.c ? new _Condition2.default(behaviour.c, _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE)) : null;

	                if (cond === null || cond && cond.check(args)) {
	                    if (args.engineId != pref.get(_Consts.SELECTED_SEARCH_ENGINE_KEY)) {
	                        pref.set(_Consts.SELECTED_SEARCH_ENGINE_KEY, args.engineId);
	                        _EventsService2.default.trigger('SEARCH_ENGINE_CHANGED');
	                    }
	                }
	            };
	            break;
	        case ActionTypes.PUBLISH_EVENTS_WHEN_CLICKED_OUTSIDE:
	            retFunc = function retFunc(args) {
	                try {
	                    if (selfIsMounted(self) && !self.props.config.hide && !ReactDOM.findDOMNode(self).contains(args.target)) {
	                        if (behaviour.events) {
	                            for (var i = 0; i < behaviour.events.length; i++) {
	                                _EventsService2.default.trigger(behaviour.events[i].name, [_assign(behaviour.events[i])]);
	                                _LoggerService2.default.debug('event: ' + behaviour.events[i].name);
	                            }
	                        }
	                    }
	                } catch (e) {
	                    _LoggerService2.default.track('error', 'PUBLISH_EVENTS_WHEN_CLICKED_OUTSIDE: ' + e.message);
	                }
	            };
	            break;
	        case ActionTypes.CHANGE_BACKGROUND:
	            retFunc = function retFunc(args) {
	                if (args.image) {
	                    self.setState({
	                        style: _assign({}, self.state ? self.state.style : {}, { backgroundImage: 'url(content/images/' + args.image + ')', backgroundColor: 'none' })
	                    });
	                } else if (args.color) {
	                    self.setState({
	                        style: _assign({}, self.state ? self.state.style : {}, { backgroundImage: 'none', backgroundColor: args.color })
	                    });
	                }
	            };
	            break;
	        case ActionTypes.PERSIST_BACKGROUND:
	            retFunc = function retFunc(args) {
	                var prefService = _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE);

	                if (args.image) {
	                    prefService.set(_Consts.BACKGROUND_IMAGE_KEY, args.image);
	                    prefService.set(_Consts.BACKGROUND_COLOR_KEY, "");
	                } else if (args.color) {
	                    prefService.set(_Consts.BACKGROUND_COLOR_KEY, args.color);
	                    prefService.set(_Consts.BACKGROUND_IMAGE_KEY, "");
	                }
	            };
	            break;
	        case ActionTypes.RELOAD_BACKGROUND:
	            retFunc = function retFunc(args) {
	                var cond = behaviour.c ? new _Condition2.default(behaviour.c) : null;
	                if (cond && cond.check(args)) {
	                    var prefService = _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE);
	                    var props = {};
	                    props.color = prefService.get(_Consts.BACKGROUND_COLOR_KEY);
	                    props.image = prefService.get(_Consts.BACKGROUND_IMAGE_KEY);
	                    _EventsService2.default.trigger(ActionTypes.CHANGE_BACKGROUND, [props]);
	                    _LoggerService2.default.debug('event: ' + ActionTypes.CHANGE_BACKGROUND);
	                }
	            };
	            break;
	        case ActionTypes.SET_BORDER_GRAY:
	            retFunc = function retFunc(args) {
	                if (args.color) {
	                    self.setState({
	                        style: _assign({}, self.state ? self.state.style : {}, { borderColor: "lightgray" })
	                    });
	                } else if (args.image) {
	                    var previousStyle = _assign({}, self.state ? self.state.style : {});

	                    if (previousStyle.hasOwnProperty("borderColor")) {
	                        delete previousStyle["borderColor"];
	                    }

	                    self.setState({ style: previousStyle });
	                }
	                self.forceUpdate();
	            };
	            break;
	        case ActionTypes.CHANGE_COLOR_TO_GRAY:
	            retFunc = function retFunc(args) {
	                if (args.color === "#ffffff") {
	                    self.setState({ style: _assign({}, self.state ? self.state.style : {}, { color: "#8A8A8A" }) });
	                } else {
	                    var unselectedStyle = { color: self.props.config.style.color };
	                    self.setState({ style: _assign({}, self.state ? self.state.style : {}, unselectedStyle) });
	                }
	            };
	            break;
	        case ActionTypes.INVERT_IMAGE:
	            retFunc = function retFunc(args) {
	                if (args.color === "#ffffff") {
	                    self.setState({ style: _assign({}, self.state ? self.state.style : {}, { "-webkitFilter": "invert(100%)", filter: "invert(100%)" }) });
	                } else {
	                    var unselectedStyle = { filter: self.props.config.style.filter ? self.props.config.style.filter : "invert(0%)",
	                        "-webkitFilter": self.props.config.style.filter ? self.props.config.style.filter : "invert(0%)"
	                    };
	                    self.setState({ style: _assign({}, self.state ? self.state.style : {}, unselectedStyle) });
	                }
	            };
	            break;
	        case ActionTypes.SET_STATE:
	            retFunc = function retFunc(args) {
	                var cond = behaviour.c ? new _Condition2.default(behaviour.c) : null;
	                _LoggerService2.default.debug(self);
	                if (cond && cond.check(args)) {
	                    self.setState(_assign({}, behaviour.state));
	                } else {
	                    var unselectedState = {};
	                    for (var key in behaviour.state) {
	                        unselectedState[key] = _typeof(behaviour.state[key]) === "object" ? {} : undefined;
	                    }
	                    self.setState(_assign({}, unselectedState));
	                }
	            };
	            break;
	        case ActionTypes.LOCK_SETTINGS:
	            retFunc = function retFunc(args) {
	                var cond = behaviour.c ? new _Condition2.default(behaviour.c) : null;
	                if ((cond === null || cond && cond.check(args)) && behaviour.keys) {
	                    try {
	                        var pref = _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE);
	                        var value = behaviour.unlock && behaviour.unlock === true ? undefined : true;
	                        for (var i = 0; i < Object.keys(behaviour.keys).length; i++) {
	                            pref.set(behaviour.keys[i] + "_locked", value);
	                        }
	                    } catch (e) {
	                        _LoggerService2.default.track('error', 'LOCK_SETTINGS90: ' + e.message);
	                    }
	                }
	            };
	            break;
	        case ActionTypes.SET_SELECTED:
	            retFunc = function retFunc(args, sender) {
	                if (self.props.config.id === sender.id) {
	                    self.setState({
	                        style: _assign({}, self.state ? self.state.style : {}, self.props.config.selectedStyle)
	                    });
	                } else {
	                    var unselectedStyle = {};

	                    for (var selectedKey in self.props.config.selectedStyle) {
	                        unselectedStyle[selectedKey] = self.props.config.style[selectedKey];
	                    }

	                    self.setState({
	                        style: _assign({}, self.state ? self.state.style : {}, unselectedStyle)
	                    });
	                }
	            };
	            break;
	        case ActionTypes.SET_TEXT:
	            retFunc = function retFunc(args) {
	                self.setState({ text: args.text });

	                if (self.props.config.events && self.props.config.events.onSetText) {
	                    var params = _assign({}, self.props.config.events.onSetText, { text: args.text });

	                    _EventsService2.default.trigger(self.props.config.events.onSetText.name, [params, _assign({}, self.props.config)]);
	                    _LoggerService2.default.debug('event: ' + self.props.config.events.onSetText.name);
	                }
	            };
	            break;
	        case ActionTypes.HIDE_OR_SHOW:
	            retFunc = function retFunc(args) {
	                var cond = behaviour.c ? new _Condition2.default(behaviour.c) : null;
	                if (cond === null || cond && cond.check(args)) {
	                    self.props.config.hide = !self.props.config.hide;
	                    self.forceUpdate();
	                }
	            };
	            break;
	        case ActionTypes.HIDE_COMPONENT:
	            retFunc = function retFunc(args) {
	                var cond = behaviour.c ? new _Condition2.default(behaviour.c) : null;
	                if (cond === null || cond && cond.check(args)) {
	                    self.props.config.hide = true;
	                    self.forceUpdate();
	                }
	            };
	            break;
	        case ActionTypes.SHOW_COMPONENT:
	            retFunc = function retFunc(args) {
	                var pref = _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE);
	                var cond = behaviour.c ? new _Condition2.default(behaviour.c, _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE)) : null;
	                if (cond === null || cond && cond.check(args)) {
	                    var delay = behaviour.delay !== undefined ? behaviour.delay : pref.get(_Consts.POPUP_DELAY_KEY);

	                    setTimeout(function () {
	                        self.props.config.hide = false;
	                        self.forceUpdate();
	                    }, delay);
	                    _LoggerService2.default.debug("show: " + JSON.stringify(self.props.config));
	                    _EventsService2.default.trigger(ActionTypes.SHOW_COMPONENT, [_assign({}, self.props.config)]);
	                }
	            };
	            break;
	        case ActionTypes.RELOAD_COMPONENT:
	            retFunc = function retFunc(args) {
	                var cond = behaviour.c ? new _Condition2.default(behaviour.c, _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE)) : null;
	                if (cond === null || cond && cond.check(args)) {
	                    self.forceUpdate();
	                    _EventsService2.default.trigger(ActionTypes.RELOAD_IMAGE, [_assign({}, self.props.config)]);
	                }
	            };
	            break;
	        case ActionTypes.SET_PREFERENCES:
	            retFunc = function retFunc(args) {
	                var pref = _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE);
	                var cond = behaviour.c ? new _Condition2.default(behaviour.c) : null;

	                if (cond === null || cond && cond.check(args)) {
	                    (function () {
	                        var relevantKeys = [];
	                        var allKeys = [];
	                        if (behaviour.wildcard == true) {
	                            allKeys = pref.getAllKeys();
	                            allKeys.forEach(function (key) {
	                                if (key.indexOf(behaviour.key) >= 0) {
	                                    relevantKeys.push(key);
	                                }
	                            });
	                        } else {
	                            relevantKeys.push(behaviour.key);
	                        }

	                        relevantKeys.forEach(function (key) {
	                            if (behaviour.op) {
	                                var lsValue = pref.get(key) == undefined || pref.get(key) == '' ? 0 : parseFloat(pref.get(key));
	                                switch (behaviour.op) {
	                                    case '*':
	                                        lsValue *= behaviour.val;
	                                        pref.set(key, lsValue);
	                                        break;
	                                    case '-':
	                                        lsValue -= behaviour.val;
	                                        pref.set(key, lsValue);
	                                        break;
	                                    case '/':
	                                        if (lsValue != 0) {
	                                            lsValue /= behaviour.val;
	                                            pref.set(key, lsValue);
	                                        }
	                                        break;
	                                    case '+':
	                                        lsValue += behaviour.val;
	                                        pref.set(key, lsValue);
	                                        break;
	                                }
	                            } else {
	                                pref.set(key, behaviour.val);
	                            }
	                        });
	                    })();
	                }
	            };
	            break;
	        case ActionTypes.CHANGE_VISIBILITY:
	            retFunc = function retFunc(args) {
	                self.setState({ isOpen: !self.state.isOpen });
	            };
	            break;
	        case ActionTypes.HIDE:
	            retFunc = function retFunc(args) {
	                self.setState({ isOpen: false });
	            };
	            break;
	        case ActionTypes.UPDATE_WEATHER:
	            retFunc = function retFunc(args) {
	                try {
	                    (function () {
	                        var prefService = _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE);
	                        var geodata_url = 'http://api.openweathermap.org/data/2.5/weather?appid=' + _Consts.WEATHER_API_KEY + '&units=' + prefService.get(_Consts.UNITS_WEATHER_KEY) + '&lat={lat}&lon={lon}'.replace('{lat}', prefService.get(_Consts.GEO_DATA_KEY)[_Consts.LATITUDE_KEY]).replace('{lon}', prefService.get(_Consts.GEO_DATA_KEY)[_Consts.LONGITUDE_KEY]);

	                        _HttpService2.default.doGetJSON(geodata_url).then(function (gdata) {
	                            prefService.set(_Consts.CITY_KEY, gdata.name);
	                            self.setState({
	                                isCelsius: prefService.get(_Consts.UNITS_WEATHER_KEY) !== "imperial",
	                                temperature: Math.round(gdata.main.temp),
	                                city: gdata.name,
	                                icon: "url(content/images/weather/" + gdata.weather[0].icon + ".svg)"
	                            });
	                        }).catch(function (reason) {
	                            self.setState({
	                                isCelsius: prefService.get(_Consts.UNITS_WEATHER_KEY) !== "imperial"
	                            });
	                        });
	                    })();
	                } catch (e) {
	                    _LoggerService2.default.track('error', 'UPDATE_WEATHER90: ' + e.message);
	                }
	            };
	            break;
	        case ActionTypes.TRACK:
	            retFunc = function retFunc(args) {
	                var cond = behaviour.c ? new _Condition2.default(behaviour.c) : null;
	                var extra1 = {};
	                if (args && args.clickLocation) {
	                    extra1.click_location = args.clickLocation;
	                }

	                if (cond === null || cond.check(args)) {
	                    var tracking = _ServiceFactory2.default.get(_Consts.TRACKING_SERVICE);
	                    tracking.trackStatusEvent(behaviour.eventType, _assign({}, behaviour.extra1, extra1), behaviour.extra2, function (res) {
	                        _LoggerService2.default.debug('Track res: ' + JSON.stringify(res));
	                    });

	                    _LoggerService2.default.debug('Track events: ' + JSON.stringify(behaviour));
	                }
	            };
	            break;
	        case ActionTypes.UNINSTALL_EXTENSION:
	            retFunc = function retFunc(args) {
	                _ChromeService2.default.uninstall(function () {});
	            };
	            break;
	        case ActionTypes.PARSE_URL:
	            retFunc = function retFunc(args) {
	                if (args.hash === '#ds1') {
	                    _LoggerService2.default.debug(window.decodeURIComponent(window.location.href));
	                }
	            };
	            break;
	        case ActionTypes.OPEN_WEB_PAGE:
	            retFunc = function retFunc(args) {

	                var tracking = _ServiceFactory2.default.get(_Consts.TRACKING_SERVICE);
	                var cond = behaviour.c ? new _Condition2.default(behaviour.c) : null;
	                var url = args.url ? args.url : '';
	                var windowFeatures = ''; // = args.windowFeatures ? args.windowFeatures : null;

	                if (args.windowFeatures != undefined && args.windowFeatures) {
	                    try {
	                        windowFeatures = JSON.stringify(args.windowFeatures);
	                        windowFeatures = windowFeatures.replace(/{/g, '').replace(/}/g, '').replace(/"/g, '').replace(/:/g, '=');
	                    } catch (e) {
	                        windowFeatures = '';
	                        tracking.trackStatusEvent(_Consts.ERROR_TRACK_EVENT, e.message, e.lineNumber + '@OPEN_WEB_PAGE');
	                    }
	                }

	                if (cond === null || cond.check(args)) {
	                    window.open(url, '', windowFeatures);
	                }
	            };
	            break;
	        default:
	            retFunc = function retFunc() {};
	    }

	    return retFunc;
	}

	function selfIsMounted(self) {
	    try {
	        ReactDOM.findDOMNode(self);
	        return true;
	    } catch (e) {
	        return false;
	    }
	}

	function unregister(behaviours) {
	    var createAction = actionCreator.bind(this);
	    if (behaviours) {
	        // Remove listeners
	        for (var i = 0; i < behaviours.length; i++) {
	            var behaviour = behaviours[i];
	            _EventsService2.default.off(behaviour.on, createAction(behaviour));
	        }
	    }
	}

	function register(behaviours) {
	    var createAction = actionCreator.bind(this);
	    if (behaviours) {
	        // Add listeners
	        for (var i = 0; i < behaviours.length; i++) {
	            var behaviour = behaviours[i];
	            _EventsService2.default.on(behaviour.on, createAction(behaviour));
	        }
	    }
	}

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';

	(function (global, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, module], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {
	    factory(exports, module);
	  } else {
	    var mod = {
	      exports: {}
	    };
	    factory(mod.exports, mod);
	    global.fetchJsonp = mod.exports;
	  }
	})(undefined, function (exports, module) {
	  'use strict';

	  var defaultOptions = {
	    timeout: 5000,
	    jsonpCallback: 'callback',
	    jsonpCallbackFunction: null
	  };

	  function generateCallbackFunction() {
	    return 'jsonp_' + Date.now() + '_' + Math.ceil(Math.random() * 100000);
	  }

	  // Known issue: Will throw 'Uncaught ReferenceError: callback_*** is not defined'
	  // error if request timeout
	  function clearFunction(functionName) {
	    // IE8 throws an exception when you try to delete a property on window
	    // http://stackoverflow.com/a/1824228/751089
	    try {
	      delete window[functionName];
	    } catch (e) {
	      window[functionName] = undefined;
	    }
	  }

	  function removeScript(scriptId) {
	    var script = document.getElementById(scriptId);
	    document.getElementsByTagName('head')[0].removeChild(script);
	  }

	  function fetchJsonp(_url) {
	    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

	    // to avoid param reassign
	    var url = _url;
	    var timeout = options.timeout || defaultOptions.timeout;
	    var jsonpCallback = options.jsonpCallback || defaultOptions.jsonpCallback;

	    var timeoutId = undefined;

	    return new Promise(function (resolve, reject) {
	      var callbackFunction = options.jsonpCallbackFunction || generateCallbackFunction();
	      var scriptId = jsonpCallback + '_' + callbackFunction;

	      window[callbackFunction] = function (response) {
	        resolve({
	          ok: true,
	          // keep consistent with fetch API
	          json: function json() {
	            return Promise.resolve(response);
	          }
	        });

	        if (timeoutId) clearTimeout(timeoutId);

	        removeScript(scriptId);

	        clearFunction(callbackFunction);
	      };

	      // Check if the user set their own params, and if not add a ? to start a list of params
	      url += url.indexOf('?') === -1 ? '?' : '&';

	      var jsonpScript = document.createElement('script');
	      jsonpScript.setAttribute('src', '' + url + jsonpCallback + '=' + callbackFunction);
	      jsonpScript.id = scriptId;
	      document.getElementsByTagName('head')[0].appendChild(jsonpScript);

	      timeoutId = setTimeout(function () {
	        reject(new Error('JSONP request to ' + url + ' timed out'));

	        clearFunction(callbackFunction);
	        removeScript(scriptId);
	      }, timeout);
	    });
	  }

	  // export as global function
	  /*
	  let local;
	  if (typeof global !== 'undefined') {
	    local = global;
	  } else if (typeof self !== 'undefined') {
	    local = self;
	  } else {
	    try {
	      local = Function('return this')();
	    } catch (e) {
	      throw new Error('polyfill failed because global object is unavailable in this environment');
	    }
	  }
	  local.fetchJsonp = fetchJsonp;
	  */

	  module.exports = fetchJsonp;
	});

/***/ },
/* 34 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var DO_SEARCH = exports.DO_SEARCH = 'DO_SEARCH';
	var CHANGE_ENGINE = exports.CHANGE_ENGINE = 'CHANGE_ENGINE';
	var UPDATE_SEARCH_TEXT = exports.UPDATE_SEARCH_TEXT = 'UPDATE_SEARCH_TEXT';
	var UPDATE_SEARCH_CATEGORY = exports.UPDATE_SEARCH_CATEGORY = 'UPDATE_SEARCH_CATEGORY';

	var CHANGE_COLOR_TO_GRAY = exports.CHANGE_COLOR_TO_GRAY = 'CHANGE_COLOR_TO_GRAY';
	var INVERT_IMAGE = exports.INVERT_IMAGE = 'INVERT_IMAGE';
	var SET_STATE = exports.SET_STATE = 'SET_STATE';
	var HIDE_OR_SHOW = exports.HIDE_OR_SHOW = 'HIDE_OR_SHOW';
	var SET_SELECTED = exports.SET_SELECTED = 'SET_SELECTED';
	var SET_TEXT = exports.SET_TEXT = 'SET_TEXT';
	var SET_PREFERENCES = exports.SET_PREFERENCES = 'SET_PREFERENCES';

	var CHANGE_BACKGROUND = exports.CHANGE_BACKGROUND = 'CHANGE_BACKGROUND';
	var RELOAD_BACKGROUND = exports.RELOAD_BACKGROUND = 'RELOAD_BACKGROUND';
	var PERSIST_BACKGROUND = exports.PERSIST_BACKGROUND = 'PERSIST_BACKGROUND';
	var SET_BORDER_GRAY = exports.SET_BORDER_GRAY = 'SET_BORDER_GRAY';
	var HIDE_WHEN_CLICKED_OUTSIDE = exports.HIDE_WHEN_CLICKED_OUTSIDE = 'HIDE_WHEN_CLICKED_OUTSIDE';
	var HIDE_WHEN_CLICKED_ON = exports.HIDE_WHEN_CLICKED_ON = 'HIDE_WHEN_CLICKED_ON';
	var PUBLISH_EVENTS_WHEN_CLICKED_OUTSIDE = exports.PUBLISH_EVENTS_WHEN_CLICKED_OUTSIDE = 'PUBLISH_EVENTS_WHEN_CLICKED_OUTSIDE';
	var HIDE_COMPONENT = exports.HIDE_COMPONENT = 'HIDE_COMPONENT';
	var SHOW_COMPONENT = exports.SHOW_COMPONENT = 'SHOW_COMPONENT';
	var GET_SEARCH_SUGGESTIONS = exports.GET_SEARCH_SUGGESTIONS = 'GET_SEARCH_SUGGESTIONS';
	var CHANGE_SELECTED = exports.CHANGE_SELECTED = 'CHANGE_SELECTED';
	var CHANGE_VISIBILITY = exports.CHANGE_VISIBILITY = 'CHANGE_VISIBILITY';
	var HIDE = exports.HIDE = 'HIDE';
	var UPDATE_WEATHER = exports.UPDATE_WEATHER = 'UPDATE_WEATHER';
	var UNINSTALL_EXTENSION = exports.UNINSTALL_EXTENSION = 'UNINSTALL_EXTENSION';
	var PARSE_URL = exports.PARSE_URL = 'PARSE_URL';
	var OPEN_WEB_PAGE = exports.OPEN_WEB_PAGE = 'OPEN_WEB_PAGE';
	var RELOAD_COMPONENT = exports.RELOAD_COMPONENT = 'RELOAD_COMPONENT';
	var SET_SEARCH_ENGINE = exports.SET_SEARCH_ENGINE = 'SET_SEARCH_ENGINE';
	var LOCK_SETTINGS = exports.LOCK_SETTINGS = 'LOCK_SETTINGS';

	var TRACK = exports.TRACK = 'TRACK';

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Addons = __webpack_require__(36);
	var Color = __webpack_require__(68);
	var Display = __webpack_require__(38);
	var GlobalStylesheets = __webpack_require__(41);

	var assign = __webpack_require__(5);
	var createCSS = __webpack_require__(43);
	var curry = __webpack_require__(67);
	var invariant = __webpack_require__(66);

	var index = assign({
	  curry: curry,
	  install: GlobalStylesheets.install,
	  injectAutoprefixer: function injectAutoprefixer(autoprefix) {
	    invariant(typeof autoprefix === 'function', 'You may only inject functions for autoprefix');
	    createCSS.injection.autoprefix = autoprefix;
	  },
	  injectClassNameStrategy: function injectClassNameStrategy(getStylesheetId, formatClassNameFromId) {
	    if (getStylesheetId) {
	      invariant(typeof getStylesheetId === 'function', 'getStylesheetId must be a function');
	      GlobalStylesheets.injection.getStylesheetId = getStylesheetId;
	    }

	    if (formatClassNameFromId) {
	      invariant(typeof formatClassNameFromId === 'function', 'formatClassNameFromId must be a function');
	      GlobalStylesheets.injection.formatClassNameFromId = formatClassNameFromId;
	    }
	  }
	}, Color, Display, Addons);

	module.exports = index;

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Flex = __webpack_require__(37);

	var curry = __webpack_require__(67);

	var Addons = {
	  Row: curry(Flex, { flexDirection: 'row' }),
	  Col: curry(Flex, { flexDirection: 'column' })
	};

	module.exports = Addons;

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(38).Flex;

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var CSSDisplayNames = __webpack_require__(39);
	var makeStyleComponentClass = __webpack_require__(40);

	var Display = {};

	for (var name in CSSDisplayNames) {
	  var display = CSSDisplayNames[name];
	  Display[name] = makeStyleComponentClass({ display: display }, name);
	}

	module.exports = Display;

/***/ },
/* 39 */
/***/ function(module, exports) {

	'use strict';

	var CSSDisplayNames = {
	  Block: 'block',
	  Flex: 'flex',
	  InlineBlock: 'inline-block',
	  InlineFlex: 'inline-flex',
	  Table: 'table',
	  TableRow: 'table-row',
	  TableCell: 'table-cell',
	  Inline: 'inline'
	};

	module.exports = CSSDisplayNames;

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var GlobalStylesheets = __webpack_require__(41);
	var React = __webpack_require__(27);

	var assign = __webpack_require__(5);

	function getStyleFromProps(props) {
	  var style = {};

	  for (var key in props) {
	    if (key === 'children' || key === 'className' || key === 'component' || key === 'props' || key === 'style') {
	      continue;
	    }
	    style[key] = props[key];
	  }

	  assign(style, props.style);
	  return style;
	}

	function makeStyleComponentClass(defaults, displayName, tagName) {
	  tagName = tagName || 'div';
	  displayName = displayName || 'Style';

	  var Style = React.createClass({
	    displayName: displayName,

	    statics: {
	      style: defaults
	    },

	    getDefaultProps: function getDefaultProps() {
	      return defaults;
	    },

	    refStyleKey: function refStyleKey(props) {
	      this.component = this.props.component || tagName;
	      this.styleKey = GlobalStylesheets.getKey(getStyleFromProps(props), displayName, this.component);
	      if (this.styleKey) {
	        GlobalStylesheets.ref(this.styleKey);
	      }
	    },

	    componentWillMount: function componentWillMount() {
	      this.refStyleKey(this.props);
	    },

	    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	      if (this.styleKey) {
	        GlobalStylesheets.unref(this.styleKey);
	      }
	      this.refStyleKey(nextProps);
	    },

	    componentWillUnmount: function componentWillUnmount() {
	      if (this.styleKey) {
	        GlobalStylesheets.unref(this.styleKey);
	      }
	    },

	    render: function render() {
	      var style = getStyleFromProps(this.props);
	      var className = this.styleKey ? GlobalStylesheets.getClassName(this.styleKey) : null;

	      return React.createElement(this.component, assign({
	        className: className || this.props.className ? (this.props.className || '') + ' ' + (className || '') : null,
	        children: this.props.children
	      }, this.props.props));
	    }
	  });

	  return Style;
	}

	module.exports = makeStyleComponentClass;

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var explodePseudoStyles = __webpack_require__(42);
	var createCSS = __webpack_require__(43);

	var assign = __webpack_require__(5);
	var invariant = __webpack_require__(66);

	var PREFIX = 'jsxstyle';

	var stylesheetIdSeed = 0;

	var styles = {};

	var browser = typeof document !== 'undefined';

	function addStyle(css) {
	  var head = document.head || document.getElementsByTagName('head')[0];
	  var style = document.createElement('style');

	  style.type = 'text/css';
	  if (style.styleSheet) {
	    style.styleSheet.cssText = css;
	  } else {
	    style.appendChild(document.createTextNode(css));
	  }

	  head.appendChild(style);

	  return style;
	}

	function createStylesheet(stylesheet) {
	  var styles = explodePseudoStyles(assign({}, stylesheet.style));
	  var className = PREFIX + stylesheet.id;
	  var stylesheetText = [createCSS(styles.base, className, null), createCSS(styles.hover, className, null, ':hover'), createCSS(styles.active, className, null, ':active'), createCSS(styles.focus, className, null, ':focus')].join('');

	  return addStyle(stylesheetText);
	}

	function reap() {
	  for (var key in styles) {
	    if (styles[key].refs === 0) {
	      if (styles[key].domNode) {
	        styles[key].domNode.remove();
	      }
	      delete styles[key];
	    }
	  }
	}

	var GlobalStylesheets = {
	  install: function install() {
	    if (browser) {
	      setInterval(reap, 10000);
	    }
	  },

	  getKey: function getKey(styleObj, displayName, component) {
	    var pairs = [];

	    Object.keys(styleObj).sort().forEach(function (key) {
	      var value = styleObj[key];

	      if (!value) {
	        return;
	      }

	      if (typeof value !== 'string' && typeof value !== 'number' && value != null) {
	        value = value.toString();
	      }
	      pairs.push(key + ':' + value);
	    });

	    if (pairs.length === 0) {
	      return null;
	    }

	    var key = pairs.join(',');

	    if (!styles.hasOwnProperty(key)) {
	      var stylesheet = {
	        id: GlobalStylesheets.injection.getStylesheetId(key),
	        style: styleObj,
	        refs: 0
	      };
	      if (browser) {
	        stylesheet.domNode = createStylesheet(stylesheet);
	        document.head.appendChild(stylesheet.domNode);
	      }
	      styles[key] = stylesheet;
	    }

	    return key;
	  },

	  ref: function ref(key) {
	    styles[key].refs++;
	  },

	  unref: function unref(key) {
	    --styles[key].refs;
	  },

	  getClassName: function getClassName(styleKey) {
	    return GlobalStylesheets.injection.formatClassNameFromId(styles[styleKey].id);
	  },

	  injection: {
	    getStylesheetId: function getStylesheetId(styleKey, displayName, component) {
	      return stylesheetIdSeed++;
	    },
	    formatClassNameFromId: function formatClassNameFromId(id) {
	      return PREFIX + id;
	    }
	  }
	};

	module.exports = GlobalStylesheets;

/***/ },
/* 42 */
/***/ function(module, exports) {

	'use strict';

	function stripPrefixFromStyleProp(styleProp, prefix) {
	  var formattedProp = styleProp.substr(prefix.length);
	  if (formattedProp.startsWith('Webkit') || formattedProp.startsWith('Moz')) {
	    return formattedProp;
	  }
	  return formattedProp.charAt(0).toLowerCase() + formattedProp.slice(1);
	}

	function explodePseudoStyles(style) {
	  var styleObject = {};

	  for (var name in style) {
	    if (style.hasOwnProperty(name)) {
	      var prefix = 'base';
	      var styleProp = name;

	      if (name.startsWith('hover')) {
	        prefix = 'hover';
	      } else if (name.startsWith('focus')) {
	        prefix = 'focus';
	      } else if (name.startsWith('active')) {
	        prefix = 'active';
	      }

	      if (prefix !== 'base') {
	        styleProp = stripPrefixFromStyleProp(styleProp, prefix);
	      }

	      styleObject[prefix] = styleObject[prefix] || {};
	      styleObject[prefix][styleProp] = style[name];
	    }
	  }

	  return styleObject;
	}

	module.exports = explodePseudoStyles;

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var CSSPropertyOperations = __webpack_require__(44);

	function createCSS(styles, className, comment, pseudoSelector) {
	  if (!styles) {
	    return null;
	  }
	  var cssMarkup = CSSPropertyOperations.createMarkupForStyles(createCSS.injection.autoprefix(styles));

	  if (!cssMarkup) {
	    return null;
	  }

	  pseudoSelector = pseudoSelector || '';
	  comment = comment || '';

	  return '.' + className + pseudoSelector + ' {\n' + '  ' + comment + cssMarkup + '\n}\n\n';
	}

	createCSS.injection = {
	  autoprefix: function autoprefix(styles) {
	    return styles;
	  }
	};

	module.exports = createCSS;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */

	'use strict';

	var CSSProperty = __webpack_require__(45);
	var ExecutionEnvironment = __webpack_require__(46);
	var ReactInstrumentation = __webpack_require__(47);

	var camelizeStyleName = __webpack_require__(60);
	var dangerousStyleValue = __webpack_require__(62);
	var hyphenateStyleName = __webpack_require__(63);
	var memoizeStringOnly = __webpack_require__(65);
	var warning = __webpack_require__(50);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function warnHyphenatedStyleName(name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function warnBadVendoredStyleName(name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function checkRenderMessage(owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function warnValidStyle(name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function createMarkupForStyles(styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function setValueForStyles(node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))

/***/ },
/* 45 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 46 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */

	'use strict';

	var debugTool = null;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(48);
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDebugTool
	 */

	'use strict';

	var ReactInvalidSetStateWarningDevTool = __webpack_require__(49);
	var ReactHostOperationHistoryDevtool = __webpack_require__(52);
	var ReactComponentTreeDevtool = __webpack_require__(53);
	var ReactChildrenMutationWarningDevtool = __webpack_require__(57);
	var ExecutionEnvironment = __webpack_require__(46);

	var performanceNow = __webpack_require__(58);
	var warning = __webpack_require__(50);

	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};

	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  eventHandlers.forEach(function (handler) {
	    try {
	      if (handler[handlerFunctionName]) {
	        handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	      }
	    } catch (e) {
	      process.env.NODE_ENV !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
	      handlerDoesThrowForEvent[handlerFunctionName] = true;
	    }
	  });
	}

	var _isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = null;
	var currentFlushStartTime = null;
	var currentTimerDebugID = null;
	var currentTimerStartTime = null;
	var currentTimerNestedFlushDuration = null;
	var currentTimerType = null;

	var lifeCycleTimerHasWarned = false;

	function clearHistory() {
	  ReactComponentTreeDevtool.purgeUnmountedComponents();
	  ReactHostOperationHistoryDevtool.clearHistory();
	}

	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	    var parentID = ReactComponentTreeDevtool.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeDevtool.getDisplayName(id),
	      text: ReactComponentTreeDevtool.getText(id),
	      updateCount: ReactComponentTreeDevtool.getUpdateCount(id),
	      childIDs: ReactComponentTreeDevtool.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || ReactComponentTreeDevtool.getOwnerID(parentID),
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}

	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements || [];
	  var previousOperations = ReactHostOperationHistoryDevtool.getHistory();

	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = null;
	    currentFlushMeasurements = null;
	    clearHistory();
	    return;
	  }

	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeDevtool.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }

	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}

	function checkDebugID(debugID) {
	  process.env.NODE_ENV !== 'production' ? warning(debugID, 'ReactDebugTool: debugID may not be empty.') : void 0;
	}

	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	    lifeCycleTimerHasWarned = true;
	  }
	  if (_isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();

	  var startTime = _lifeCycleTimerStack$.startTime;
	  var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;
	  var debugID = _lifeCycleTimerStack$.debugID;
	  var timerType = _lifeCycleTimerStack$.timerType;

	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	var ReactDebugTool = {
	  addDevtool: function addDevtool(devtool) {
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function removeDevtool(devtool) {
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function isProfiling() {
	    return _isProfiling;
	  },
	  beginProfiling: function beginProfiling() {
	    if (_isProfiling) {
	      return;
	    }

	    _isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addDevtool(ReactHostOperationHistoryDevtool);
	  },
	  endProfiling: function endProfiling() {
	    if (!_isProfiling) {
	      return;
	    }

	    _isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeDevtool(ReactHostOperationHistoryDevtool);
	  },
	  getFlushHistory: function getFlushHistory() {
	    return flushHistory;
	  },
	  onBeginFlush: function onBeginFlush() {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function onEndFlush() {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginReconcilerTimer: function onBeginReconcilerTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginReconcilerTimer', debugID, timerType);
	  },
	  onEndReconcilerTimer: function onEndReconcilerTimer(debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onEndReconcilerTimer', debugID, timerType);
	  },
	  onError: function onError(debugID) {
	    if (currentTimerDebugID != null) {
	      endLifeCycleTimer(currentTimerDebugID, currentTimerType);
	    }
	    emitEvent('onError', debugID);
	  },
	  onBeginProcessingChildContext: function onBeginProcessingChildContext() {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function onEndProcessingChildContext() {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function onHostOperation(debugID, type, payload) {
	    checkDebugID(debugID);
	    emitEvent('onHostOperation', debugID, type, payload);
	  },
	  onComponentHasMounted: function onComponentHasMounted(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onComponentHasMounted', debugID);
	  },
	  onComponentHasUpdated: function onComponentHasUpdated(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onComponentHasUpdated', debugID);
	  },
	  onSetState: function onSetState() {
	    emitEvent('onSetState');
	  },
	  onSetDisplayName: function onSetDisplayName(debugID, displayName) {
	    checkDebugID(debugID);
	    emitEvent('onSetDisplayName', debugID, displayName);
	  },
	  onSetChildren: function onSetChildren(debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onSetOwner: function onSetOwner(debugID, ownerDebugID) {
	    checkDebugID(debugID);
	    emitEvent('onSetOwner', debugID, ownerDebugID);
	  },
	  onSetParent: function onSetParent(debugID, parentDebugID) {
	    checkDebugID(debugID);
	    emitEvent('onSetParent', debugID, parentDebugID);
	  },
	  onSetText: function onSetText(debugID, text) {
	    checkDebugID(debugID);
	    emitEvent('onSetText', debugID, text);
	  },
	  onMountRootComponent: function onMountRootComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountRootComponent', debugID);
	  },
	  onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeMountComponent', debugID, element);
	  },
	  onMountComponent: function onMountComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	  },
	  onUpdateComponent: function onUpdateComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onUnmountComponent: function onUnmountComponent(debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function onTestEvent() {
	    emitEvent('onTestEvent');
	  }
	};

	ReactDebugTool.addDevtool(ReactInvalidSetStateWarningDevTool);
	ReactDebugTool.addDevtool(ReactComponentTreeDevtool);
	ReactDebugTool.addDevtool(ReactChildrenMutationWarningDevtool);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}

	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInvalidSetStateWarningDevTool
	 */

	'use strict';

	var warning = __webpack_require__(50);

	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;

	  var warnInvalidSetState = function warnInvalidSetState() {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}

	var ReactInvalidSetStateWarningDevTool = {
	  onBeginProcessingChildContext: function onBeginProcessingChildContext() {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function onEndProcessingChildContext() {
	    processingChildContext = false;
	  },
	  onSetState: function onSetState() {
	    warnInvalidSetState();
	  }
	};

	module.exports = ReactInvalidSetStateWarningDevTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(51);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };

	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }

	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }

	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }

	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))

/***/ },
/* 51 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 52 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostOperationHistoryDevtool
	 */

	'use strict';

	var history = [];

	var ReactHostOperationHistoryDevtool = {
	  onHostOperation: function onHostOperation(debugID, type, payload) {
	    history.push({
	      instanceID: debugID,
	      type: type,
	      payload: payload
	    });
	  },
	  clearHistory: function clearHistory() {
	    if (ReactHostOperationHistoryDevtool._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }

	    history = [];
	  },
	  getHistory: function getHistory() {
	    return history;
	  }
	};

	module.exports = ReactHostOperationHistoryDevtool;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeDevtool
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(54);

	var ReactCurrentOwner = __webpack_require__(55);

	var invariant = __webpack_require__(56);
	var warning = __webpack_require__(50);

	var tree = {};
	var unmountedIDs = {};
	var rootIDs = {};

	function updateTree(id, update) {
	  if (!tree[id]) {
	    tree[id] = {
	      element: null,
	      parentID: null,
	      ownerID: null,
	      text: null,
	      childIDs: [],
	      displayName: 'Unknown',
	      isMounted: false,
	      updateCount: 0
	    };
	  }
	  update(tree[id]);
	}

	function purgeDeep(id) {
	  var item = tree[id];
	  if (item) {
	    var childIDs = item.childIDs;

	    delete tree[id];
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function describeID(id) {
	  var name = ReactComponentTreeDevtool.getDisplayName(id);
	  var element = ReactComponentTreeDevtool.getElement(id);
	  var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeDevtool.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeDevtool: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeDevtool = {
	  onSetDisplayName: function onSetDisplayName(id, displayName) {
	    updateTree(id, function (item) {
	      return item.displayName = displayName;
	    });
	  },
	  onSetChildren: function onSetChildren(id, nextChildIDs) {
	    updateTree(id, function (item) {
	      item.childIDs = nextChildIDs;

	      nextChildIDs.forEach(function (nextChildID) {
	        var nextChild = tree[nextChildID];
	        !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected devtool events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('68') : void 0;
	        !(nextChild.displayName != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetDisplayName() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('69') : void 0;
	        !(nextChild.childIDs != null || nextChild.text != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() or onSetText() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('70') : void 0;
	        !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	        if (nextChild.parentID == null) {
	          nextChild.parentID = id;
	          // TODO: This shouldn't be necessary but mounting a new root during in
	          // componentWillMount currently causes not-yet-mounted components to
	          // be purged from our tree data so their parent ID is missing.
	        }
	        !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetParent() and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('72', nextChildID, nextChild.parentID, id) : void 0;
	      });
	    });
	  },
	  onSetOwner: function onSetOwner(id, ownerID) {
	    updateTree(id, function (item) {
	      return item.ownerID = ownerID;
	    });
	  },
	  onSetParent: function onSetParent(id, parentID) {
	    updateTree(id, function (item) {
	      return item.parentID = parentID;
	    });
	  },
	  onSetText: function onSetText(id, text) {
	    updateTree(id, function (item) {
	      return item.text = text;
	    });
	  },
	  onBeforeMountComponent: function onBeforeMountComponent(id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onMountComponent: function onMountComponent(id) {
	    updateTree(id, function (item) {
	      return item.isMounted = true;
	    });
	  },
	  onMountRootComponent: function onMountRootComponent(id) {
	    rootIDs[id] = true;
	  },
	  onUpdateComponent: function onUpdateComponent(id) {
	    updateTree(id, function (item) {
	      return item.updateCount++;
	    });
	  },
	  onUnmountComponent: function onUnmountComponent(id) {
	    updateTree(id, function (item) {
	      return item.isMounted = false;
	    });
	    unmountedIDs[id] = true;
	    delete rootIDs[id];
	  },
	  purgeUnmountedComponents: function purgeUnmountedComponents() {
	    if (ReactComponentTreeDevtool._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var id in unmountedIDs) {
	      purgeDeep(id);
	    }
	    unmountedIDs = {};
	  },
	  isMounted: function isMounted(id) {
	    var item = tree[id];
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function getCurrentStackAddendum(topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeDevtool.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function getStackAddendumByID(id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeDevtool.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function getChildIDs(id) {
	    var item = tree[id];
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function getDisplayName(id) {
	    var item = tree[id];
	    return item ? item.displayName : 'Unknown';
	  },
	  getElement: function getElement(id) {
	    var item = tree[id];
	    return item ? item.element : null;
	  },
	  getOwnerID: function getOwnerID(id) {
	    var item = tree[id];
	    return item ? item.ownerID : null;
	  },
	  getParentID: function getParentID(id) {
	    var item = tree[id];
	    return item ? item.parentID : null;
	  },
	  getSource: function getSource(id) {
	    var item = tree[id];
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function getText(id) {
	    var item = tree[id];
	    return item ? item.text : null;
	  },
	  getUpdateCount: function getUpdateCount(id) {
	    var item = tree[id];
	    return item ? item.updateCount : 0;
	  },
	  getRootIDs: function getRootIDs() {
	    return Object.keys(rootIDs);
	  },
	  getRegisteredIDs: function getRegisteredIDs() {
	    return Object.keys(tree);
	  }
	};

	module.exports = ReactComponentTreeDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))

/***/ },
/* 54 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule reactProdInvariant
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ },
/* 55 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */

	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildrenMutationWarningDevtool
	 */

	'use strict';

	var ReactComponentTreeDevtool = __webpack_require__(53);

	var warning = __webpack_require__(50);

	var elements = {};

	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element._shadowChildren === undefined) {
	    return;
	  }
	  if (element._shadowChildren === element.props.children) {
	    return;
	  }
	  var isMutated = false;
	  if (Array.isArray(element._shadowChildren)) {
	    if (element._shadowChildren.length === element.props.children.length) {
	      for (var i = 0; i < element._shadowChildren.length; i++) {
	        if (element._shadowChildren[i] !== element.props.children[i]) {
	          isMutated = true;
	        }
	      }
	    } else {
	      isMutated = true;
	    }
	  }
	  process.env.NODE_ENV !== 'production' ? warning(Array.isArray(element._shadowChildren) && !isMutated, 'Component\'s children should not be mutated.%s', ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	}

	var ReactDOMUnknownPropertyDevtool = {
	  onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
	    elements[debugID] = element;
	  },
	  onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
	    elements[debugID] = element;
	  },
	  onComponentHasMounted: function onComponentHasMounted(debugID) {
	    handleElement(debugID, elements[debugID]);
	    delete elements[debugID];
	  },
	  onComponentHasUpdated: function onComponentHasUpdated(debugID) {
	    handleElement(debugID, elements[debugID]);
	    delete elements[debugID];
	  }
	};

	module.exports = ReactDOMUnknownPropertyDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var performance = __webpack_require__(59);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(46);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(61);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 61 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */

	'use strict';

	var CSSProperty = __webpack_require__(45);
	var warning = __webpack_require__(50);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(64);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 64 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 65 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var React = __webpack_require__(27);

	var assign = __webpack_require__(5);

	function curry(componentClass) {
	  var args = Array.prototype.slice.call(arguments, 1);
	  args.unshift({});
	  var props = assign.apply(null, args);

	  var propTypes = assign({}, componentClass.propTypes);
	  for (var key in props) {
	    delete propTypes[key];
	  }

	  return React.createClass({
	    displayName: componentClass.displayName + ' (curried)',
	    propTypes: propTypes,
	    render: function render() {
	      return React.createElement(componentClass, assign({}, props, this.props));
	    }
	  });
	}

	module.exports = curry;

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var assign = __webpack_require__(5);
	var invariant = __webpack_require__(66);

	function RGBA(r, g, b, a) {
	  this.r = r;
	  this.g = g;
	  this.b = b;
	  this.a = a;
	}

	assign(RGBA.prototype, {
	  toString: function toString() {
	    var params = Math.round(this.r) + ', ' + Math.round(this.g) + ', ' + Math.round(this.b);
	    if (typeof this.a === 'undefined') {
	      return 'rgb(' + params + ')';
	    }
	    return 'rgba(' + params + ',' + this.a + ')';
	  }
	});

	var Color = {
	  rgb: function rgb(r, g, b) {
	    invariant(arguments.length === 3, 'rgb() takes only 3 arguments');
	    return new RGBA(r, g, b);
	  },

	  rgba: function rgba(r, g, b, a) {
	    return new RGBA(r, g, b, a);
	  },

	  alpha: function alpha(rgba, a) {
	    return new RGBA(rgba.r, rgba.g, rgba.b, a);
	  },

	  shade: function shade(rgba, percent) {
	    invariant(typeof percent === 'number' && percent >= 0 && percent <= 1, 'Percent must be between 0 and 1');
	    return new RGBA(rgba.r * percent, rgba.g * percent, rgba.b * percent, rgba.a);
	  },

	  linearGradient: function linearGradient(direction, points) {
	    invariant(typeof direction === 'string', 'You must include a direction string');
	    invariant(Array.isArray(points), 'points must be an array of arrays');
	    return 'linear-gradient(' + direction + ', ' + points.map(function (point) {
	      return point.join(' ');
	    }).join(', ') + ')';
	  }
	};

	module.exports = Color;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _Actions = __webpack_require__(32);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Link = function (_React$Component) {
	    _inherits(Link, _React$Component);

	    function Link() {
	        _classCallCheck(this, Link);

	        return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).apply(this, arguments));
	    }

	    _createClass(Link, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            _Actions.register.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            _Actions.unregister.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            return React.createElement(
	                "a",
	                { style: _assign({}, this.props.config.style ? this.props.config.style : {}, this.state ? this.state.style : {}),
	                    href: this.props.config.href ? this.props.config.href : "#",
	                    onClick: this.props.onClick,
	                    target: this.props.config.href ? "_blank" : '' },
	                this.props.config.title
	            );
	        }
	    }]);

	    return Link;
	}(React.Component);

	exports.default = Link;


	_ComponentsFactory2.default.add(function () {
	    return Link;
	}, 'Link');

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    Block = _require.Block;

	var Text = function (_React$Component) {
	    _inherits(Text, _React$Component);

	    function Text() {
	        _classCallCheck(this, Text);

	        return _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).apply(this, arguments));
	    }

	    _createClass(Text, [{
	        key: "render",
	        value: function render() {
	            return React.createElement(
	                Block,
	                { style: this.props.config.style ? this.props.config.style : {} },
	                this.props.config.text
	            );
	        }
	    }]);

	    return Text;
	}(React.Component);

	exports.default = Text;


	_ComponentsFactory2.default.add(function () {
	    return Text;
	}, 'Text');

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _reactAddonsCssTransitionGroup = __webpack_require__(31);

	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _EventsService = __webpack_require__(11);

	var _EventsService2 = _interopRequireDefault(_EventsService);

	var _LoggerService = __webpack_require__(2);

	var _LoggerService2 = _interopRequireDefault(_LoggerService);

	var _FirstChild = __webpack_require__(72);

	var _FirstChild2 = _interopRequireDefault(_FirstChild);

	var _Actions = __webpack_require__(32);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    Block = _require.Block;

	var Item = function (_React$Component) {
	    _inherits(Item, _React$Component);

	    function Item(props) {
	        _classCallCheck(this, Item);

	        var _this = _possibleConstructorReturn(this, (Item.__proto__ || Object.getPrototypeOf(Item)).call(this, props));

	        _this.state = {
	            style: {},
	            hovered: false
	        };

	        if (props.config.selected) {
	            _this.state = {
	                style: _assign({}, _this.state ? _this.state.style : {}, props.config.selectedStyle),
	                hovered: false
	            };
	        }

	        _this.handleClick = _this.handleClick.bind(_this);
	        _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);
	        _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);
	        return _this;
	    }

	    _createClass(Item, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            _Actions.register.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            _Actions.unregister.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var component = React.createElement("div", { style: { display: "none" } });
	            var containerProps = {
	                onClick: this.handleClick,
	                onMouseEnter: this.handleMouseEnter,
	                onMouseLeave: this.handleMouseLeave
	            };

	            if (!this.props.config.hide) {
	                component = React.createElement(
	                    Block,
	                    { style: _assign({}, this.props.config.style ? this.props.config.style : {}, this.state.style, this.state.hovered && this.props.config.hover || this.props.hover && this.props.config.parentHover ? this.props.config.hover : {}),
	                        props: containerProps },
	                    this.props.config.text
	                );
	            }

	            if (!this.props.config.hide && this.props.config.animateClass) {
	                component = React.createElement(
	                    _reactAddonsCssTransitionGroup2.default,
	                    { component: _FirstChild2.default,
	                        transitionName: this.props.config.animateClass,
	                        transitionAppear: true,
	                        transitionAppearTimeout: 0,
	                        transitionEnterTimeout: 0,
	                        transitionLeaveTimeout: 0 },
	                    !this.props.config.hide ? component : null
	                );
	            }

	            return component;
	        }
	    }, {
	        key: "handleMouseEnter",
	        value: function handleMouseEnter(event) {
	            this.setState({ hovered: true });
	        }
	    }, {
	        key: "handleMouseLeave",
	        value: function handleMouseLeave(event) {
	            this.setState({ hovered: false });
	        }
	    }, {
	        key: "handleClick",
	        value: function handleClick(event) {
	            if (this.props.config.events && this.props.config.events.onClick) {
	                var params = _assign({}, this.props.config.events.onClick);
	                event.stopPropagation();
	                _LoggerService2.default.debug("Shot click event " + JSON.stringify(params));
	                _EventsService2.default.trigger(this.props.config.events.onClick.name, [params, _assign({}, this.props.config)]);
	                _LoggerService2.default.debug('event: ' + this.props.config.events.onClick.name);
	            }

	            if (this.props.onClick) {
	                this.props.onClick(event);
	            }
	        }
	    }]);

	    return Item;
	}(React.Component);

	exports.default = Item;


	_ComponentsFactory2.default.add(function () {
	    return Item;
	}, "Item");

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function FirstChild(props) {
	    var childrenArray = React.Children.toArray(props.children);
	    return childrenArray[0] || null;
	}

	exports.default = FirstChild;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _EventsService = __webpack_require__(11);

	var _EventsService2 = _interopRequireDefault(_EventsService);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _LoggerService = __webpack_require__(2);

	var _LoggerService2 = _interopRequireDefault(_LoggerService);

	var _FirstChild = __webpack_require__(72);

	var _FirstChild2 = _interopRequireDefault(_FirstChild);

	var _Actions = __webpack_require__(32);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Input = function (_React$Component) {
	    _inherits(Input, _React$Component);

	    function Input(props) {
	        _classCallCheck(this, Input);

	        var _this = _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props));

	        _this.handleChange = _this.handleChange.bind(_this);
	        _this.handleClick = _this.handleClick.bind(_this);
	        _this.handleKeyDown = _this.handleKeyDown.bind(_this);

	        _this.state = {
	            text: undefined,
	            style: {}
	        };
	        return _this;
	    }

	    _createClass(Input, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            if (this.props.config.focus) {
	                this.textInput.autofocus = true;

	                setTimeout(function () {
	                    // TODO: Check possible fix for chrome stealing the input focus at the address bar
	                    this.textInput.focus();
	                }.bind(this), 1000);

	                this.textInput.focus();
	            }

	            _Actions.register.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            _Actions.unregister.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var _this2 = this;

	            var component = React.createElement("div", { style: { display: "none" } });
	            var inputType = this.props.config.inputType ? this.props.config.inputType : "text";
	            var text = _assign({}, { text: this.props.config.text }, this.state && this.state.text !== undefined ? this.state : {}).text;

	            if (!this.props.config.hide) {
	                component = React.createElement("input", { type: inputType,
	                    ref: function ref(input) {
	                        return _this2.textInput = input;
	                    },
	                    autoFocus: this.props.config.focus,
	                    onClick: this.handleClick,
	                    onKeyDown: this.handleKeyDown,
	                    onChange: this.handleChange,
	                    placeholder: this.props.config.placeholder,
	                    value: (inputType === "text" || inputType === "search") && text === undefined ? "" : text,
	                    style: _assign({}, this.props.config.style, this.state.style) });
	            }

	            if (!this.props.config.hide && this.props.config.animateClass) {
	                component = React.createElement(
	                    ReactCSSTransitionGroup,
	                    { component: _FirstChild2.default,
	                        transitionName: this.props.config.animateClass,
	                        transitionAppear: true,
	                        transitionAppearTimeout: 0,
	                        transitionEnterTimeout: 0,
	                        transitionLeaveTimeout: 0 },
	                    !this.props.config.hide ? component : null
	                );
	            }

	            return component;
	        }
	    }, {
	        key: "handleClick",
	        value: function handleClick(e) {
	            if (this.props.config.events && this.props.config.events.onClick) {
	                var params = _assign({}, this.props.config.events.onClick);
	                event.stopPropagation();
	                _LoggerService2.default.debug("Shot click event " + JSON.stringify(params));
	                _EventsService2.default.trigger(this.props.config.events.onClick.name, [params, _assign({}, this.props.config)]);
	                _LoggerService2.default.debug('event: ' + this.props.config.events.onClick.name);
	            }
	        }
	    }, {
	        key: "handleChange",
	        value: function handleChange(e) {
	            this.setState({ text: e.target.value });

	            if (this.props.config.events && this.props.config.events.onChange) {
	                var params = _assign({}, this.props.config.events.onChange, { text: e.target.value });

	                // LoggerService.debug("Shot click event " + JSON.stringify(params));
	                _EventsService2.default.trigger(this.props.config.events.onChange.name, [params, _assign({}, this.props.config)]);
	                _LoggerService2.default.debug('event: ' + this.props.config.events.onClick.name);
	            }
	        }
	    }, {
	        key: "handleKeyDown",
	        value: function handleKeyDown(e) {
	            if (this.props.config.events && this.props.config.events.onKeyDown) {
	                var _event = this.props.config.events.onKeyDown;
	                var params = _assign({}, this.props.config.events.onKeyDown, _event, { text: e.target.value }, {
	                    altKey: e.altKey,
	                    charCode: e.charCode,
	                    ctrlKey: e.ctrlKey,
	                    key: e.key,
	                    keyCode: e.keyCode,
	                    locale: e.locale,
	                    location: e.location,
	                    metaKey: e.metaKey,
	                    repeat: e.repeat,
	                    shiftKey: e.shiftKey,
	                    which: e.which
	                });

	                // LoggerService.debug("Shot click event " + JSON.stringify(params));
	                _EventsService2.default.trigger(_event.name, [params, _assign({}, this.props.config)]);
	                _LoggerService2.default.debug('event: ' + _event.name);
	            }
	        }
	    }]);

	    return Input;
	}(React.Component);

	exports.default = Input;


	_ComponentsFactory2.default.add(function () {
	    return Input;
	}, 'Input');

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    Block = _require.Block;

	var ItemsContainer = function (_React$Component) {
	    _inherits(ItemsContainer, _React$Component);

	    function ItemsContainer(props) {
	        _classCallCheck(this, ItemsContainer);

	        return _possibleConstructorReturn(this, (ItemsContainer.__proto__ || Object.getPrototypeOf(ItemsContainer)).call(this, props));
	    }

	    _createClass(ItemsContainer, [{
	        key: "createComponents",
	        value: function createComponents() {
	            var childrenComponents;
	            if (this.props.config.components) {
	                var components = this.props.config.components;
	                var itemStyle = this.props.config.itemStyle;
	                var self = this;

	                childrenComponents = Object.keys(this.props.config.components).map(function (componentKey) {
	                    var ComponentObject = _ComponentsFactory2.default.createComponent("Item");
	                    var config = _assign({}, components[componentKey]);
	                    config.style = _assign({}, itemStyle, components[componentKey].style);
	                    return React.createElement(ComponentObject, { key: componentKey, config: config,
	                        onClick: self.handleItemClick.bind(this, componentKey) });
	                });
	            }

	            return childrenComponents;
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var children = this.createComponents();
	            return React.createElement(
	                Block,
	                { style: this.props.config.style },
	                children
	            );
	        }
	    }, {
	        key: "handleItemClick",
	        value: function handleItemClick(componentKey, event) {
	            console.log(componentKey);
	            console.log(event);
	        }
	    }]);

	    return ItemsContainer;
	}(React.Component);

	exports.default = ItemsContainer;


	_ComponentsFactory2.default.add(function () {
	    return ItemsContainer;
	}, 'ItemsContainer');

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _EventsService = __webpack_require__(11);

	var _EventsService2 = _interopRequireDefault(_EventsService);

	var _DropDown = __webpack_require__(76);

	var _DropDown2 = _interopRequireDefault(_DropDown);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _Consts = __webpack_require__(1);

	var _ServiceFactory = __webpack_require__(7);

	var _ServiceFactory2 = _interopRequireDefault(_ServiceFactory);

	var _LoggerService = __webpack_require__(2);

	var _LoggerService2 = _interopRequireDefault(_LoggerService);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SearchEngineSelect = function (_React$Component) {
	    _inherits(SearchEngineSelect, _React$Component);

	    function SearchEngineSelect(props) {
	        _classCallCheck(this, SearchEngineSelect);

	        var _this = _possibleConstructorReturn(this, (SearchEngineSelect.__proto__ || Object.getPrototypeOf(SearchEngineSelect)).call(this, props));

	        _this.search = _ServiceFactory2.default.get(_Consts.SEARCH_SERVICE);
	        _this.state = {
	            options: _this.searchEngines2Options(),
	            selectedOption: _this.search.getCurrentSearchEngineIndex()
	        };
	        return _this;
	    }

	    _createClass(SearchEngineSelect, [{
	        key: "render",
	        value: function render() {
	            return React.createElement(_DropDown2.default, { config: _assign(this.props.config, this.state),
	                onChange: this.handleClick.bind(this) });
	        }
	    }, {
	        key: "handleClick",
	        value: function handleClick(selectedOption) {
	            this.search.setCurrentSearchEngine(selectedOption.value);
	            this.setState({ selectedOption: this.search.getCurrentSearchEngineIndex() });
	            console.log("Selected search engine: " + selectedOption.value);

	            if (this.props.config.events && this.props.config.events.onChange) {
	                var params = _assign({}, this.props.config.events.onChange);

	                _EventsService2.default.trigger(this.props.config.events.onChange.name, [params, _assign({}, this.props.config)]);
	                _LoggerService2.default.debug('event: ' + this.props.config.events.onChange.name);
	            }
	        }
	    }, {
	        key: "searchEngines2Options",
	        value: function searchEngines2Options() {
	            var options = [];
	            var engines = this.search.getEngines();

	            for (var i = 0; i < Object.keys(engines).length; i++) {
	                options.push({
	                    label: engines[i].logo ? "" : engines[i].shortName,
	                    value: engines[i].id,
	                    style: engines[i].logo ? {
	                        backgroundImage: "url(content/images/" + engines[i].logo + ")"
	                    } : {}
	                });
	            }

	            return options;
	        }
	    }]);

	    return SearchEngineSelect;
	}(React.Component);

	exports.default = SearchEngineSelect;


	_ComponentsFactory2.default.add(function () {
	    return SearchEngineSelect;
	}, 'SearchEngineSelect');

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _reactDom = __webpack_require__(28);

	var ReactDOM = _interopRequireWildcard(_reactDom);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    Block = _require.Block;

	var DropDown = function (_React$Component) {
	    _inherits(DropDown, _React$Component);

	    function DropDown(props) {
	        _classCallCheck(this, DropDown);

	        var _this = _possibleConstructorReturn(this, (DropDown.__proto__ || Object.getPrototypeOf(DropDown)).call(this, props));

	        _this.state = {
	            selected: props.config ? props.config.options[props.config.selectedOption] : {
	                label: props.placeholder || 'Select...',
	                value: ''
	            },
	            isOpen: false
	        };

	        _this.mounted = true;
	        _this.handleDocumentClick = _this.handleDocumentClick.bind(_this);
	        _this.fireChangeEvent = _this.fireChangeEvent.bind(_this);
	        return _this;
	    }

	    _createClass(DropDown, [{
	        key: "componentWillReceiveProps",
	        value: function componentWillReceiveProps(newProps) {
	            if (newProps.config && newProps.config.options[newProps.config.selectedOption] !== this.state.selected) {
	                this.setState({ selected: newProps.config.options[newProps.config.selectedOption] });
	            }
	        }
	    }, {
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            document.addEventListener('click', this.handleDocumentClick, false);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            this.mounted = false;
	            document.removeEventListener('click', this.handleDocumentClick, false);
	        }
	    }, {
	        key: "handleDocumentClick",
	        value: function handleDocumentClick(event) {
	            if (this.mounted) {
	                if (!ReactDOM.findDOMNode(this).contains(event.target)) {
	                    this.setState({ isOpen: false });
	                }
	            }
	        }
	    }, {
	        key: "handleMouseDown",
	        value: function handleMouseDown(event) {
	            if (event.type === 'mousedown' && event.button !== 0) {
	                return;
	            }

	            event.stopPropagation();
	            event.preventDefault();

	            this.setState({
	                isOpen: !this.state.isOpen
	            });
	        }
	    }, {
	        key: "setValue",
	        value: function setValue(option) {
	            var newState = {
	                selected: option,
	                isOpen: false
	            };
	            this.fireChangeEvent(newState);
	            this.setState(newState);
	        }
	    }, {
	        key: "fireChangeEvent",
	        value: function fireChangeEvent(newState) {
	            if (newState.selected !== this.state.selected && this.props.onChange) {
	                this.props.onChange(newState.selected);
	            }
	        }
	    }, {
	        key: "renderOption",
	        value: function renderOption(option, index) {
	            var value = option.value || option.label || option;
	            var label = option.label || (typeof option === 'string' ? option : " ");
	            var separator = index > 0 ? React.createElement(Block, { style: this.props.config.optionSeparatorStyle }) : null;

	            return React.createElement(
	                Block,
	                { key: value },
	                separator,
	                React.createElement(
	                    "div",
	                    { style: _assign(option.style ? option.style : {}, this.props.config.optionStyle),
	                        onMouseDown: this.setValue.bind(this, option),
	                        onClick: this.setValue.bind(this, option) },
	                    label
	                )
	            );
	        }
	    }, {
	        key: "renderMenu",
	        value: function renderMenu() {
	            var _this2 = this;

	            var options = this.props.config.options;

	            var ops = options.map(function (option, index) {
	                return _this2.state.selected === option ? null : _this2.renderOption(option, index);
	            });

	            return ops.length ? ops : React.createElement(
	                "div",
	                null,
	                "No options found"
	            );
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var baseClassName = this.props.baseClassName;

	            var placeHolderValue = typeof this.state.selected === 'string' ? this.state.selected : this.state.selected.label;
	            var value = React.createElement(
	                "div",
	                null,
	                placeHolderValue
	            );
	            var menu = this.state.isOpen ? React.createElement(
	                Block,
	                null,
	                this.renderMenu()
	            ) : null;

	            return React.createElement(
	                Block,
	                { style: this.props.config.style },
	                React.createElement(
	                    "div",
	                    { onMouseDown: this.handleMouseDown.bind(this),
	                        style: _assign(this.state.selected.style ? this.state.selected.style : {}, this.props.config.optionStyle) },
	                    value
	                ),
	                React.createElement(
	                    Block,
	                    { style: _assign({ display: this.state.isOpen ? 'block' : 'none' }, this.props.config.optionsContainerStyle) },
	                    menu
	                )
	            );
	        }
	    }]);

	    return DropDown;
	}(React.Component);

	exports.default = DropDown;


	DropDown.defaultProps = { baseClassName: 'Dropdown' };

	_ComponentsFactory2.default.add(function () {
	    return DropDown;
	}, 'DropDown');

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _Consts = __webpack_require__(1);

	var _ServiceFactory = __webpack_require__(7);

	var _ServiceFactory2 = _interopRequireDefault(_ServiceFactory);

	var _EventsService = __webpack_require__(11);

	var _EventsService2 = _interopRequireDefault(_EventsService);

	var _Actions = __webpack_require__(32);

	var _LoggerService = __webpack_require__(2);

	var _LoggerService2 = _interopRequireDefault(_LoggerService);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    Block = _require.Block;

	var SearchAutoSuggest = function (_React$Component) {
	    _inherits(SearchAutoSuggest, _React$Component);

	    function SearchAutoSuggest(props) {
	        _classCallCheck(this, SearchAutoSuggest);

	        var _this = _possibleConstructorReturn(this, (SearchAutoSuggest.__proto__ || Object.getPrototypeOf(SearchAutoSuggest)).call(this, props));

	        _this.search = _ServiceFactory2.default.get(_Consts.SEARCH_SERVICE);
	        _this.state = {
	            rows: [],
	            selected: -1,
	            style: {}
	        };
	        return _this;
	    }

	    _createClass(SearchAutoSuggest, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            _Actions.register.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            _Actions.unregister.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "handleMouseEnter",
	        value: function handleMouseEnter(args) {
	            this.setState({ selected: args[0] });
	        }
	    }, {
	        key: "handleMouseClick",
	        value: function handleMouseClick(args) {
	            var selectedText = this.state.rows[this.state.selected];
	            _EventsService2.default.trigger(_Consts.AUTO_SUGGEST_SELECTED_CHANGE_EVENT, [{ text: selectedText }]);
	            _LoggerService2.default.debug('event: ' + _Consts.AUTO_SUGGEST_SELECTED_CHANGE_EVENT);

	            if (this.props.config.events && this.props.config.events.onClick) {
	                var params = _assign({}, this.props.config.events.onClick, { text: selectedText });

	                _EventsService2.default.trigger(this.props.config.events.onClick.name, [params, _assign({}, this.props.config)]);
	                _LoggerService2.default.debug('event: ' + this.props.config.events.onClick.name);
	            }
	        }
	    }, {
	        key: "renderRows",
	        value: function renderRows() {
	            var self = this;
	            var rows = this.state.rows.map(function (row, id) {
	                return React.createElement(
	                    "div",
	                    { key: id, style: self.state.selected === id ? self.props.config.rowStyleSelected : self.props.config.rowStyle,
	                        onMouseEnter: self.handleMouseEnter.bind(self, [id]),
	                        onClick: self.handleMouseClick.bind(self, [id]) },
	                    row
	                );
	            });

	            return rows;
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var component = React.createElement("div", { style: { display: "none" } });

	            if (!this.props.config.hide && this.state.rows.length > 0) {
	                component = React.createElement(
	                    Block,
	                    { style: _assign({}, this.props.config.style, this.state.style) },
	                    this.renderRows()
	                );
	            }

	            return component;
	        }
	    }]);

	    return SearchAutoSuggest;
	}(React.Component);

	exports.default = SearchAutoSuggest;


	_ComponentsFactory2.default.add(function () {
	    return SearchAutoSuggest;
	}, 'SearchAutoSuggest');

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _reactDom = __webpack_require__(28);

	var ReactDOM = _interopRequireWildcard(_reactDom);

	var _reactAddonsCssTransitionGroup = __webpack_require__(31);

	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);

	var _Item = __webpack_require__(71);

	var _Item2 = _interopRequireDefault(_Item);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _Actions = __webpack_require__(32);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    InlineBlock = _require.InlineBlock,
	    Block = _require.Block;

	var SupportButton = function (_React$Component) {
	    _inherits(SupportButton, _React$Component);

	    function SupportButton(props) {
	        _classCallCheck(this, SupportButton);

	        var _this = _possibleConstructorReturn(this, (SupportButton.__proto__ || Object.getPrototypeOf(SupportButton)).call(this, props));

	        _this.state = {
	            isOpen: false,
	            menuStyle: {},
	            style: {}
	        };
	        return _this;
	    }

	    _createClass(SupportButton, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            _Actions.register.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            _Actions.unregister.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "handleSupportButtonClick",
	        value: function handleSupportButtonClick() {
	            this.setState({ isOpen: !this.state.isOpen });
	        }
	    }, {
	        key: "renderMenu",
	        value: function renderMenu() {
	            var components = this.props.config.components;
	            var menu = Object.keys(components).map(function (key, index) {
	                var component = components[key];
	                var ComponentObject = _ComponentsFactory2.default.createComponent(component.type);

	                return React.createElement(
	                    Block,
	                    { key: key },
	                    React.createElement(ComponentObject, { config: component })
	                );
	            });

	            return React.createElement(
	                Block,
	                { style: _assign({}, this.props.config.menuStyle, this.state.menuStyle), key: "menu" },
	                menu
	            );
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var boundedClick = this.handleSupportButtonClick.bind(this);
	            var menu = this.state.isOpen ? this.renderMenu() : null;

	            if (this.props.config.animateClass) {
	                menu = React.createElement(
	                    _reactAddonsCssTransitionGroup2.default,
	                    { transitionName: this.props.config.animateClass,
	                        transitionEnterTimeout: 0,
	                        transitionLeaveTimeout: 0 },
	                    menu
	                );
	            }

	            return React.createElement(
	                InlineBlock,
	                null,
	                React.createElement(_Item2.default, { onClick: boundedClick, config: this.props.config }),
	                menu
	            );
	        }
	    }]);

	    return SupportButton;
	}(React.Component);

	exports.default = SupportButton;


	_ComponentsFactory2.default.add(function () {
	    return SupportButton;
	}, 'SupportButton');

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _reactAddonsCssTransitionGroup = __webpack_require__(31);

	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _Actions = __webpack_require__(32);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    Block = _require.Block;

	var IntervalComponents = function (_React$Component) {
	    _inherits(IntervalComponents, _React$Component);

	    function IntervalComponents(props) {
	        _classCallCheck(this, IntervalComponents);

	        var _this = _possibleConstructorReturn(this, (IntervalComponents.__proto__ || Object.getPrototypeOf(IntervalComponents)).call(this, props));

	        _this.state = {
	            currentComponent: 0,
	            style: {}
	        };
	        return _this;
	    }

	    _createClass(IntervalComponents, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            this.startInterval();
	            _Actions.register.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            this.clearInterval();
	            _Actions.unregister.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "clearInterval",
	        value: function (_clearInterval) {
	            function clearInterval() {
	                return _clearInterval.apply(this, arguments);
	            }

	            clearInterval.toString = function () {
	                return _clearInterval.toString();
	            };

	            return clearInterval;
	        }(function () {
	            if (this.interval) {
	                clearInterval(this.interval);
	            }
	        })
	    }, {
	        key: "startInterval",
	        value: function startInterval() {
	            var self = this;

	            this.clearInterval();

	            this.interval = setInterval(function () {
	                self.setState({
	                    currentComponent: self.nextComponentKey()
	                });
	            }, self.props.config.interval ? self.props.config.interval : 1000);
	        }
	    }, {
	        key: "renderComponent",
	        value: function renderComponent() {
	            var components = this.props.config.components;
	            var componentKeys = Object.keys(components);
	            var currentComponentKey = componentKeys[this.state.currentComponent];

	            return componentKeys.map(function (componentKey) {
	                var CurrentComponent = _ComponentsFactory2.default.createComponent(components[componentKey].type);
	                var componentConfig = components[componentKey];
	                componentConfig = _assign({}, componentConfig, { hide: currentComponentKey === componentKey });

	                return React.createElement(CurrentComponent, { config: componentConfig, key: componentKey });
	            });
	        }
	    }, {
	        key: "renderButton",
	        value: function renderButton() {
	            var components = this.props.config.components;
	            var boundClick = this.handleClick.bind(this);
	            var componentKeys = Object.keys(components);
	            var currentComponentKey = componentKeys[this.nextComponentKey()];

	            return componentKeys.map(function (componentKey) {
	                var componentConfig = components[componentKey]["button"];
	                var Button = _ComponentsFactory2.default.createComponent(componentConfig.type);
	                componentConfig = _assign({}, componentConfig, { hide: currentComponentKey === componentKey });

	                return React.createElement(Button, { config: componentConfig, onClick: boundClick, key: componentKey });
	            });
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var currentComponent = this.renderComponent();
	            var currentButton = this.renderButton();

	            return React.createElement(
	                Block,
	                { style: _assign({}, this.props.config.style, this.state.style) },
	                React.createElement(
	                    _reactAddonsCssTransitionGroup2.default,
	                    { transitionName: this.props.config.animateClass,
	                        transitionAppear: true,
	                        transitionAppearTimeout: 0,
	                        transitionEnterTimeout: 0,
	                        transitionLeaveTimeout: 0 },
	                    currentButton
	                ),
	                React.createElement(
	                    _reactAddonsCssTransitionGroup2.default,
	                    { transitionName: this.props.config.animateClass,
	                        transitionAppear: true,
	                        transitionAppearTimeout: 0,
	                        transitionEnterTimeout: 0,
	                        transitionLeaveTimeout: 0 },
	                    currentComponent
	                )
	            );
	        }
	    }, {
	        key: "handleClick",
	        value: function handleClick() {
	            this.setState({
	                currentComponent: this.nextComponentKey()
	            });

	            this.clearInterval();
	            this.startInterval();
	        }
	    }, {
	        key: "nextComponentKey",
	        value: function nextComponentKey() {
	            return this.state.currentComponent + 1 === Object.keys(this.props.config.components).length ? 0 : this.state.currentComponent + 1;
	        }
	    }]);

	    return IntervalComponents;
	}(React.Component);

	exports.default = IntervalComponents;


	_ComponentsFactory2.default.add(function () {
	    return IntervalComponents;
	}, 'IntervalComponents');

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _reactDom = __webpack_require__(28);

	var ReactDOM = _interopRequireWildcard(_reactDom);

	var _reactAddonsCssTransitionGroup = __webpack_require__(31);

	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);

	var _EventsService = __webpack_require__(11);

	var _EventsService2 = _interopRequireDefault(_EventsService);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _Actions = __webpack_require__(32);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    Block = _require.Block;

	var Popup = function (_React$Component) {
	    _inherits(Popup, _React$Component);

	    function Popup(props) {
	        _classCallCheck(this, Popup);

	        var _this = _possibleConstructorReturn(this, (Popup.__proto__ || Object.getPrototypeOf(Popup)).call(this, props));

	        _this.state = {
	            isOpen: false
	        };
	        return _this;
	    }

	    _createClass(Popup, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            _Actions.register.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            _Actions.unregister.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "renderPopup",
	        value: function renderPopup() {
	            var components = this.props.config.components;
	            var Popup = _ComponentsFactory2.default.createComponent(components["popup"].type);
	            var popupComponent = React.createElement(Popup, { config: components["popup"] });

	            return popupComponent;
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var popupComponent = this.state.isOpen ? this.renderPopup() : null;
	            var Button = _ComponentsFactory2.default.createComponent(this.props.config.components["button"].type);
	            var buttonComponent = Button ? React.createElement(Button, { config: this.props.config.components["button"] }) : null;

	            if (this.props.config.animateClass) {
	                popupComponent = React.createElement(
	                    _reactAddonsCssTransitionGroup2.default,
	                    { transitionName: this.props.config.animateClass,
	                        transitionAppear: true,
	                        transitionAppearTimeout: 0,
	                        transitionEnterTimeout: 0,
	                        transitionLeaveTimeout: 0 },
	                    popupComponent
	                );
	            }

	            var currentStyle = this.props.config.style;

	            if (this.state.style) {
	                currentStyle = _assign({}, this.props.config.style, this.state.style);
	            }

	            return React.createElement(
	                Block,
	                { style: currentStyle },
	                buttonComponent,
	                popupComponent
	            );
	        }
	    }]);

	    return Popup;
	}(React.Component);

	exports.default = Popup;


	_ComponentsFactory2.default.add(function () {
	    return Popup;
	}, 'Popup');

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _reactAddonsCssTransitionGroup = __webpack_require__(31);

	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _ServiceFactory = __webpack_require__(7);

	var _ServiceFactory2 = _interopRequireDefault(_ServiceFactory);

	var _Consts = __webpack_require__(1);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    InlineBlock = _require.InlineBlock;

	function FirstChild(props) {
	    var childrenArray = React.Children.toArray(props.children);
	    return childrenArray[0] || null;
	}

	var Clock = function (_React$Component) {
	    _inherits(Clock, _React$Component);

	    function Clock(props) {
	        _classCallCheck(this, Clock);

	        var _this = _possibleConstructorReturn(this, (Clock.__proto__ || Object.getPrototypeOf(Clock)).call(this, props));

	        _this.state = {
	            hide: _this.props.config.hide
	        };
	        return _this;
	    }

	    _createClass(Clock, [{
	        key: "componentWillReceiveProps",
	        value: function componentWillReceiveProps(nextProps) {
	            if (this.state.hide !== nextProps.config.hide) {
	                this.setState({
	                    hide: nextProps.config.hide
	                });
	            }
	        }
	    }, {
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            this.startInterval();
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            this.clearInterval();
	        }
	    }, {
	        key: "clearInterval",
	        value: function (_clearInterval) {
	            function clearInterval() {
	                return _clearInterval.apply(this, arguments);
	            }

	            clearInterval.toString = function () {
	                return _clearInterval.toString();
	            };

	            return clearInterval;
	        }(function () {
	            if (this.interval) {
	                clearInterval(this.interval);
	            }
	        })
	    }, {
	        key: "startInterval",
	        value: function startInterval() {
	            var self = this;

	            this.clearInterval();

	            this.interval = setInterval(function () {
	                self.forceUpdate();
	            }, self.props.config.interval ? self.props.config.interval : 10000);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var prefService = _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE); // "{{d}}.{{m}}.{{y}}"
	            var dateFormat = prefService.get(_Consts.DATE_FORMAT_KEY) != "{{DATE_FORMAT}}" ? prefService.get(_Consts.DATE_FORMAT_KEY) : "{{d}}.{{m}}.{{y}}";
	            var weekday = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
	            var d = new Date();
	            var hour = d.getHours() + ":" + ("0" + d.getMinutes()).slice(-2);
	            var day = weekday[d.getDay()];
	            var num = dateFormat.replace('{{m}}', d.getMonth() + 1).replace('{{d}}', d.getDate()).replace('{{y}}', d.getFullYear());

	            var component = null;

	            if (!this.state.hide) {
	                component = React.createElement(
	                    InlineBlock,
	                    { style: this.props.config.style ? this.props.config.style : {}, key: "clock",
	                        onClick: this.props.onClick },
	                    this.props.config.text,
	                    React.createElement(
	                        InlineBlock,
	                        { style: this.props.config.hourStyle },
	                        hour
	                    ),
	                    React.createElement(
	                        InlineBlock,
	                        { style: this.props.config.dateStyle },
	                        React.createElement(
	                            "p",
	                            { style: this.props.config.dayStyle },
	                            day
	                        ),
	                        React.createElement(
	                            "p",
	                            { style: this.props.config.numStyle },
	                            num
	                        )
	                    )
	                );
	            }

	            if (!this.props.config.hide && this.props.config.animateClass) {
	                component = React.createElement(
	                    _reactAddonsCssTransitionGroup2.default,
	                    { component: FirstChild,
	                        transitionName: this.props.config.animateClass,
	                        transitionAppear: true,
	                        transitionAppearTimeout: 0,
	                        transitionEnterTimeout: 0,
	                        transitionLeaveTimeout: 0 },
	                    !this.props.config.hide ? component : null
	                );
	            }

	            return component;
	        }
	    }]);

	    return Clock;
	}(React.Component);

	exports.default = Clock;


	_ComponentsFactory2.default.add(function () {
	    return Clock;
	}, 'Clock');

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _reactAddonsCssTransitionGroup = __webpack_require__(31);

	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);

	var _Consts = __webpack_require__(1);

	var _LoggerService = __webpack_require__(2);

	var _LoggerService2 = _interopRequireDefault(_LoggerService);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _ServiceFactory = __webpack_require__(7);

	var _ServiceFactory2 = _interopRequireDefault(_ServiceFactory);

	var _EventsService = __webpack_require__(11);

	var _EventsService2 = _interopRequireDefault(_EventsService);

	var _Actions = __webpack_require__(32);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    InlineBlock = _require.InlineBlock,
	    Block = _require.Block;

	var Weather = function (_React$Component) {
	    _inherits(Weather, _React$Component);

	    function Weather(props) {
	        _classCallCheck(this, Weather);

	        var _this = _possibleConstructorReturn(this, (Weather.__proto__ || Object.getPrototypeOf(Weather)).call(this, props));

	        var prefService = _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE);
	        _this.state = {
	            isCelsius: prefService.get(_Consts.UNITS_WEATHER_KEY) !== "imperial",
	            temperature: 24,
	            city: prefService.get(_Consts.CITY_KEY),
	            icon: "",
	            style: {},
	            iconStyle: {}
	        };

	        _this.handleChangeDegrees = _this.handleChangeDegrees.bind(_this);
	        return _this;
	    }

	    _createClass(Weather, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            _Actions.register.bind(this)(this.props.config.behaviours);
	            _EventsService2.default.trigger(_Consts.UNITS_WEATHER_CHANGE, []);
	            _LoggerService2.default.debug('event: ' + _Consts.UNITS_WEATHER_CHANGE);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            _Actions.unregister.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "handleChangeDegrees",
	        value: function handleChangeDegrees() {
	            var prefService = _ServiceFactory2.default.get(_Consts.PREFERENCES_SERVICE);
	            prefService.set(_Consts.UNITS_WEATHER_KEY, !this.state.isCelsius ? "metric" : "imperial");

	            if (this.props.config.events.onUnitsChange) {
	                _EventsService2.default.trigger(this.props.config.events.onUnitsChange.name, []);
	                _LoggerService2.default.debug('event: ' + this.props.config.events.onUnitsChange.name);
	            }
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var component = React.createElement("div", { style: { "display": "none" }, key: "emptyWeather" });
	            var temperature = this.state.isCelsius ? this.state.temperature : this.state.temperature;
	            var iconStyle = _assign({}, this.props.config.iconStyle, this.state.iconStyle, { backgroundImage: this.state.icon });
	            var city = this.state.city;
	            var unitsProp = {
	                onClick: this.handleChangeDegrees
	            };

	            if (!this.props.config.hide) {
	                component = React.createElement(
	                    InlineBlock,
	                    { style: _assign({}, this.props.config.style ? this.props.config.style : {}, this.state.style), key: "clock",
	                        onClick: this.props.onClick },
	                    React.createElement(
	                        Block,
	                        { style: this.props.config.tempStyle },
	                        React.createElement(
	                            InlineBlock,
	                            null,
	                            temperature
	                        ),
	                        React.createElement(
	                            InlineBlock,
	                            { style: this.props.config.degStyle },
	                            "\xB0"
	                        ),
	                        React.createElement(
	                            Block,
	                            { style: this.props.config.unitsStyle,
	                                props: unitsProp },
	                            this.state.isCelsius ? "C" : "F"
	                        )
	                    ),
	                    React.createElement(
	                        InlineBlock,
	                        { style: this.props.config.frightStyle },
	                        React.createElement(Block, { style: iconStyle }),
	                        React.createElement(
	                            InlineBlock,
	                            { style: this.props.config.cityStyle },
	                            city
	                        )
	                    )
	                );
	            }

	            if (!this.props.config.hide && this.props.config.animateClass) {
	                component = React.createElement(
	                    _reactAddonsCssTransitionGroup2.default,
	                    { transitionName: this.props.config.animateClass,
	                        transitionAppear: true,
	                        transitionAppearTimeout: 0,
	                        transitionEnterTimeout: 0,
	                        transitionLeaveTimeout: 0 },
	                    component
	                );
	            }

	            return component;
	        }
	    }]);

	    return Weather;
	}(React.Component);

	exports.default = Weather;


	_ComponentsFactory2.default.add(function () {
	    return Weather;
	}, 'Weather');

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _reactAddonsCssTransitionGroup = __webpack_require__(31);

	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _ServiceFactory = __webpack_require__(7);

	var _ServiceFactory2 = _interopRequireDefault(_ServiceFactory);

	var _EventsService = __webpack_require__(11);

	var _EventsService2 = _interopRequireDefault(_EventsService);

	var _LoggerService = __webpack_require__(2);

	var _LoggerService2 = _interopRequireDefault(_LoggerService);

	var _Actions = __webpack_require__(32);

	var _Consts = __webpack_require__(1);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    Block = _require.Block;

	var Image = function (_React$Component) {
	    _inherits(Image, _React$Component);

	    function Image(props) {
	        _classCallCheck(this, Image);

	        var _this = _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).call(this, props));

	        _this.state = {
	            style: {}
	        };

	        return _this;
	    }

	    _createClass(Image, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            _Actions.register.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            _Actions.unregister.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var style = this.props.config.style;
	            var imgSrc = this.props.config.dynamic ? this.getCurrentImage() : this.props.config.image_location;

	            return React.createElement(
	                "div",
	                null,
	                React.createElement("img", { style: style, src: imgSrc })
	            );
	        }
	    }, {
	        key: "getCurrentImage",
	        value: function getCurrentImage() {
	            return localStorage[this.props.config.image_key];
	        }
	    }]);

	    return Image;
	}(React.Component);

	exports.default = Image;


	_ComponentsFactory2.default.add(function () {
	    return Image;
	}, "Image");

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _assign = __webpack_require__(5);

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(27);

	var React = _interopRequireWildcard(_react);

	var _reactDom = __webpack_require__(28);

	var ReactDOM = _interopRequireWildcard(_reactDom);

	var _reactAddonsCssTransitionGroup = __webpack_require__(31);

	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);

	var _Item = __webpack_require__(71);

	var _Item2 = _interopRequireDefault(_Item);

	var _ComponentsFactory = __webpack_require__(6);

	var _ComponentsFactory2 = _interopRequireDefault(_ComponentsFactory);

	var _Actions = __webpack_require__(32);

	var _ServiceFactory = __webpack_require__(7);

	var _ServiceFactory2 = _interopRequireDefault(_ServiceFactory);

	var _Consts = __webpack_require__(1);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var _require = __webpack_require__(35),
	    InlineBlock = _require.InlineBlock,
	    Block = _require.Block;

	var SupportButton = function (_React$Component) {
	    _inherits(SupportButton, _React$Component);

	    function SupportButton(props) {
	        _classCallCheck(this, SupportButton);

	        var _this = _possibleConstructorReturn(this, (SupportButton.__proto__ || Object.getPrototypeOf(SupportButton)).call(this, props));

	        if (_this.props.config.menuType == 'searchEngines') {
	            _this.search = _ServiceFactory2.default.get(_Consts.SEARCH_SERVICE);
	            _this.state = {
	                options: _this.searchEngines2Options(),
	                selectedOption: _this.search.getCurrentSearchEngineIndex(),
	                isOpen: false,
	                menuStyle: {},
	                style: {}
	            };
	        } else {
	            _this.state = {
	                isOpen: false,
	                menuStyle: {},
	                style: {}
	            };
	        }

	        return _this;
	    }

	    _createClass(SupportButton, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            _Actions.register.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            _Actions.unregister.bind(this)(this.props.config.behaviours);
	        }
	    }, {
	        key: "handleMenuButtonClick",
	        value: function handleMenuButtonClick() {
	            this.setState({ isOpen: !this.state.isOpen });
	        }
	    }, {
	        key: "renderMenu",
	        value: function renderMenu() {
	            var components = {};
	            if (this.props.config.menuType == 'searchEngines') {
	                components = this.getSearchEnginesMenu(this.state.options);
	            } else {
	                components = this.props.config.components;
	            }

	            var menu = Object.keys(components).map(function (key, index) {
	                var component = components[key];
	                var ComponentObject = _ComponentsFactory2.default.createComponent(component.type);

	                return React.createElement(
	                    Block,
	                    { key: key },
	                    React.createElement(ComponentObject, { config: component })
	                );
	            });

	            return React.createElement(
	                Block,
	                { style: _assign({}, this.props.config.menuStyle, this.state.menuStyle), key: "menu" },
	                menu,
	                React.createElement("engines", null)
	            );
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var boundedClick = this.handleMenuButtonClick.bind(this);
	            var menu = this.state.isOpen ? this.renderMenu() : null;

	            if (this.props.config.animateClass) {
	                menu = React.createElement(
	                    _reactAddonsCssTransitionGroup2.default,
	                    { transitionName: this.props.config.animateClass,
	                        transitionEnterTimeout: 0,
	                        transitionLeaveTimeout: 0 },
	                    menu
	                );
	            }

	            return React.createElement(
	                InlineBlock,
	                null,
	                React.createElement(_Item2.default, { onClick: boundedClick, config: this.props.config }),
	                menu
	            );
	        }
	    }, {
	        key: "getSearchEnginesMenu",
	        value: function getSearchEnginesMenu(options) {
	            var component = {};
	            for (var i = 0; i < options.length; i++) {
	                component[options[i].value] = {};
	                component[options[i].value].type = "Input";
	                component[options[i].value].inputType = "button";
	                component[options[i].value].style = _assign({}, this.props.config.menuItemStyle, options[i].style);

	                if (!component[options[i].value].style.backgroundImage) {
	                    component[options[i].value].text = this.capitalizeFirstLetter(options[i].value);
	                }

	                if (!this.props.config.displayLogos) {
	                    component[options[i].value].text = this.capitalizeFirstLetter(options[i].value);
	                    if (component[options[i].value].style.backgroundImage) {
	                        delete component[options[i].value].style.backgroundImage;
	                    }
	                }

	                component[options[i].value].events = {};
	                component[options[i].value].events.onClick = {};
	                component[options[i].value].events.onClick.name = "SET_SEARCH_ENGINE";
	                component[options[i].value].events.onClick.engineId = options[i].value;
	            }

	            return component;
	        }
	    }, {
	        key: "searchEngines2Options",
	        value: function searchEngines2Options() {
	            var options = [];
	            var engines = this.search.getEngines();

	            for (var i = 0; i < Object.keys(engines).length; i++) {
	                options.push({
	                    label: engines[i].logo ? "" : engines[i].shortName,
	                    value: engines[i].id,
	                    style: engines[i].logo ? {
	                        backgroundImage: "url(content/images/" + engines[i].logo + ")"
	                    } : {}
	                });
	            }

	            return options;
	        }
	    }, {
	        key: "capitalizeFirstLetter",
	        value: function capitalizeFirstLetter(string) {
	            return string.substring(0, 1).toUpperCase() + string.slice(1);
	        }
	    }]);

	    return SupportButton;
	}(React.Component);

	exports.default = SupportButton;


	_ComponentsFactory2.default.add(function () {
	    return SupportButton;
	}, 'Menu');

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(86);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(91)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../node_modules/css-loader/index.js!./all.min.css", function() {
				var newContent = require("!!./../../../node_modules/css-loader/index.js!./all.min.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(87)();
	// imports


	// module
	exports.push([module.id, "@font-face{font-family:'neue';src:url(" + __webpack_require__(88) + ")}@font-face{font-family:'neue-bold';src:url(" + __webpack_require__(89) + ")}@font-face{font-family:'HelveticaNeue-Thin';src:url(" + __webpack_require__(90) + ")}\n\n@font-face{font-family:'neue';src:url(" + __webpack_require__(88) + ")}@font-face{font-family:'neue-bold';src:url(" + __webpack_require__(89) + ")}@font-face{font-family:'HelveticaNeue-Thin';src:url(" + __webpack_require__(90) + ")}body{margin:0;overflow:hidden}*{box-sizing:border-box}#root{width:100%;height:100%;position:absolute}.resize-enter{opacity:0.01;max-height:0px;max-width:0px}.resize-enter.resize-enter-active{opacity:1;max-height:70px;max-width:110px;transition:all 200ms linear}.resize-leave{opacity:1;max-height:70px;max-width:110px}.resize-leave.resize-leave-active{opacity:0.01;max-height:0px;max-width:0px;transition:all 200ms linear}.fadeout-appear,.fadeout-enter{opacity:0.01}.fadeout-appear.fadeout-appear-active,.fadeout-enter.fadeout-enter-active{opacity:1;transition:opacity 400ms ease-in}.fadeout-leave{opacity:1}.fadeout-leave.fadeout-leave-active{opacity:0.01;transition:opacity 400ms ease-out}\n", ""]);

	// exports


/***/ },
/* 87 */
/***/ function(module, exports) {

	"use strict";

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function () {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for (var i = 0; i < this.length; i++) {
				var item = this[i];
				if (item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function (modules, mediaQuery) {
			if (typeof modules === "string") modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for (var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if (typeof id === "number") alreadyImportedModules[id] = true;
			}
			for (i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if (mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if (mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b495e340f4ef8924fea0284c1bf9e7ac.woff";

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "2bfc185be71f44cd73ac81511fc1f5a5.woff";

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c5a5cbf4dbcaa7064f2bc77f52101aec.otf";

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}

	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}

	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;

		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = linkElement.href;

		linkElement.href = URL.createObjectURL(blob);

		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ }
]);